[{"path":"index.html","id":"getting-started","chapter":"1 Getting started","heading":"1 Getting started","text":"Instructors: Adele Barugahare, Paul Harrison & Laura Perlaza-Jimenez","code":""},{"path":"index.html","id":"summary","chapter":"1 Getting started","heading":"1.1 Summary","text":"workshop, conducted Monash Genomics Bioinformatics Platform, cover extend analysis contemporary third-party tools, Seurat SingleR. walking Single Cell analysis using seurat package extend cell annotation using SingleR.Important links:Installation Setup instructionsSlideshow introduction","code":""},{"path":"index.html","id":"recommended-computer-requirements","chapter":"1 Getting started","heading":"1.1.1 Recommended Computer Requirements:","text":"System Requirements:Windows:Windows 8.1 (64-bit) later4GB RAMSSD storage highly recommendedUpdated video/display drivers recommendedmacOS:macOS 10.15 (Catalina) later4GB RAMSSD storage highly recommendedInstall latest versions :RRStudioSeuratSeuratWrappersSingleRCelldexHarmony","code":""},{"path":"set-up.html","id":"set-up","chapter":"2 Set up","heading":"2 Set up","text":"workshop available VM. However, use local computer set instructions:IMPORTANT: M1 Mac - Make sure gfortan.","code":""},{"path":"set-up.html","id":"get-the-workshop-material-and-data","chapter":"2 Set up","heading":"2.1 Get the workshop material and data","text":"RStudio create new project. ensures files workshop placed folder.’ve created new project, run following R code","code":""},{"path":"set-up.html","id":"package-installation","chapter":"2 Set up","heading":"2.2 Package Installation","text":"workshop, several packages need installed.BiocManager likes update installed packages, disabled R code . installation fails, might need turn updates . Note large number packages BiocManager wants update can take several hours.instructions tested R version 4.4.1 Bioconductor version 3.16.","code":"\n## Install required packages for Seurat and clustree:\ninstall.packages(c(\"Seurat\", \"dplyr\", \"remotes\", \"R.utils\", \"harmony\", \n                   \"hdf5r\", \"clustree\", \"RColorBrewer\"))\n\n## Install required Bioconductor packages\ninstall.packages(\"BiocManager\")\nBiocManager::install(c('SingleR', 'celldex',\n                       'BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',\n                       'limma', 'S4Vectors', 'SingleCellExperiment',\n                       'SummarizedExperiment','edgeR' ),\n                     update=FALSE)"},{"path":"set-up.html","id":"raw-data","chapter":"2 Set up","heading":"2.3 Raw Data","text":"","code":"\n# where are you? what folder are you working in\n\ngetwd()\n#> [1] \"/Users/pfh/git/scRNAseq_Workshop_ABACBS_2024\"\n\n## Download and untar the data\noptions(timeout=3600)\ndownload.file(\n    \"https://bioinformatics.erc.monash.edu/home/lper0012/SingleCellWorkshopData/singlecell_2024/data.tar\",\"data.tar\")\n\nuntar(\"data.tar\")\n\n## Download workshop.R script. This file contains all the example code for this workshop.\ndownload.file(\n    \"https://monashbioinformaticsplatform.github.io/scRNAseq_Workshop_ABACBS_2024/workshop.R\",\"workshop.R\")"},{"path":"schedule.html","id":"schedule","chapter":"3 Schedule","heading":"3 Schedule","text":"","code":""},{"path":"load.html","id":"load","chapter":"4 Load data","heading":"4 Load data","text":"","code":""},{"path":"load.html","id":"setup-the-seurat-object","chapter":"4 Load data","heading":"4.1 Setup the Seurat Object","text":"","code":""},{"path":"load.html","id":"the-data-set","chapter":"4 Load data","heading":"4.2 The data set","text":"dataset used workshop modified version derived study (see ). adapted introduce additional complexity instructional purposes. Please refrain drawing biological conclusions data represent real experimental results.dataset represents human peripheral blood mononuclear cells (PBMCs), pooled eight individual donors. Genetic differences among donors enable identification cell doublets, enhancing data complexity. includes two single-cell sequencing batches, one stimulated IFN-beta. Additionally, mitochondrial expression levels introduced demonstrate interpret apply mitochondrial thresholds filtering purposes.","code":""},{"path":"load.html","id":"note-what-does-the-data-look-like","chapter":"4 Load data","heading":"Note: What does the data look like?","text":"input files look like? varies, output CellRanger pipleine, described ","code":"├── analysis\n│   ├── clustering\n│   ├── diffexp\n│   ├── pca\n│   ├── tsne\n│   └── umap\n├── cloupe.cloupe\n├── filtered_feature_bc_matrix\n│   ├── barcodes.tsv.gz\n│   ├── features.tsv.gz\n│   └── matrix.mtx.gz\n├── filtered_feature_bc_matrix.h5.  --> matrix to read in h5 format\n├── metrics_summary.csv\n├── molecule_info.h5\n├── possorted_genome_bam.bam\n├── possorted_genome_bam.bam.bai\n├── raw_feature_bc_matrix\n│   ├── barcodes.tsv.gz\n│   ├── features.tsv.gz\n│   └── matrix.mtx.gz\n├── raw_feature_bc_matrix.h5 \n└── web_summary.html"},{"path":"load.html","id":"section","chapter":"4 Load data","heading":"","text":"start reading data. several options loading data. Read10X() function reads output cellranger pipeline 10X, returning unique molecular identified (UMI) count matrix. values matrix represent number molecules feature (.e. gene; row) detected cell (column).next use count matrix create Seurat object. object serves container contains data (like count matrix) analysis (like PCA, clustering results) single-cell dataset. technical discussion Seurat object structure, check GitHub Wiki. example, count matrix stored pbmc@assays$RNA@counts.","code":"\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(Seurat)\nlibrary(patchwork)"},{"path":"load.html","id":"different-ways-of-loading-the-data","chapter":"4 Load data","heading":"4.3 Different ways of loading the data","text":"Example 1. Load data using path folder: filtered_feature_bc_matrix output folder cellranger run using Read10X function.Example 2. Load data directing ReadMtx function relevant files filtered_feature_bc_matrix folder outputs cellranger run. MTX simple text format sparse matrices.Example 3. Load data using Read10X_h5 function relevant HDF5 files. HDF5 efficient binary format.. values matrix represent 0s (molecules detected). Since values scRNA-seq matrix 0, Seurat uses sparse-matrix representation whenever possible. results significant memory speed savings Drop-seq/inDrop/10x data.","code":"## Load the PBMC dataset\n# pbmc.data <- Read10X(data.dir = \"outs/filtered_feature_bc_matrix\")\n## Initialize the Seurat object with the raw (non-normalized data).\n# seurat_object <- CreateSeuratObject(counts = pbmc.data, min.cells = 3, min.features = 200)\n\n# expression_matrix <- ReadMtx(\n#   mtx = \"outs/filtered_feature_bc_matrix/count_matrix.mtx.gz\", features = \"outs/filtered_feature_bc_matrix/features.tsv.gz\",\n#   cells = \"outs/filtered_feature_bc_matrix/barcodes.tsv.gz\"\n# )\n#\n# seurat_object <- CreateSeuratObject(counts = expression_matrix)\n\npbmc.data <- Read10X_h5(\"data/filtered_feature_bc_matrix.h5\")\nmetadata <- read.table(\"data/metadata.txt\")\n\n  \n  \nseurat_object <- CreateSeuratObject(counts = pbmc.data ,\n                                 assay = \"RNA\", project = 'pbmc')\n#> Warning: Feature names cannot have underscores ('_'),\n#> replacing with dashes ('-')\n\n\n\n# Use AddMetaData to add new meta data to object\nseurat_object  <- AddMetaData(object = seurat_object, metadata = metadata)\n# Lets examine a few genes in the first thirty cells\npbmc.data[c(\"CD3D\",\"TCL1A\",\"MS4A1\"), 1:30]\n#> 3 x 30 sparse Matrix of class \"dgCMatrix\"\n#>   [[ suppressing 30 column names 'AGGGCGCTATTTCC-1', 'GGAGACGATTCGTT-1', 'CACCGTTGTCGTAG-1' ... ]]\n#>                                                            \n#> CD3D  . 2 . . . 5 . . . . 2 . . . 1 . . 1 1 . . . 1 . 1 3 .\n#> TCL1A . . . . . . . . . . . . . . . . . . . . . . . 3 . . .\n#> MS4A1 . . . . . . . . . . . . . . . . . . . . . . . 1 . . .\n#>            \n#> CD3D  2 . .\n#> TCL1A . . .\n#> MS4A1 . . .\ndense.size <- object.size(as.matrix(pbmc.data))\n#> Warning in asMethod(object): sparse->dense coercion:\n#> allocating vector of size 1.3 GiB\ndense.size\n#> 1428252816 bytes\nsparse.size <- object.size(pbmc.data)\nsparse.size\n#> 39615768 bytes\ndense.size / sparse.size\n#> 36.1 bytes"},{"path":"qc.html","id":"qc","chapter":"5 QC Filtering","heading":"5 QC Filtering","text":"steps encompass standard pre-processing workflow scRNA-seq data Seurat. represent selection filtration cells based QC metrics, data normalization scaling, detection highly variable features.","code":""},{"path":"qc.html","id":"qc-and-selecting-cells-for-further-analysis","chapter":"5 QC Filtering","heading":"5.1 QC and selecting cells for further analysis","text":"","code":""},{"path":"qc.html","id":"why-do-we-need-to-do-this","chapter":"5 QC Filtering","heading":"Why do we need to do this?","text":"Low quality cells can add noise results leading wrong biological conclusions. Using good quality cells helps avoid . Reduce noise data filtering low quality cells dying stressed cells (high mitochondrial expression) cells features can reflect empty droplets.","code":""},{"path":"qc.html","id":"section-1","chapter":"5 QC Filtering","heading":"","text":"Seurat allows easily explore QC metrics filter cells based user-defined criteria. QC metrics commonly used community includeThe number unique genes detected cell.\nLow-quality cells empty droplets often genes\nCell doublets multiplets may exhibit aberrantly high gene count\nLow-quality cells empty droplets often genesCell doublets multiplets may exhibit aberrantly high gene countSimilarly, total number molecules detected within cell (correlates strongly unique genes)percentage reads map mitochondrial genome\nLow-quality / dying cells often exhibit extensive mitochondrial contamination\ncalculate mitochondrial QC metrics PercentageFeatureSet() function, calculates percentage counts originating set features\nuse set genes starting MT- set mitochondrial genes\nLow-quality / dying cells often exhibit extensive mitochondrial contaminationWe calculate mitochondrial QC metrics PercentageFeatureSet() function, calculates percentage counts originating set featuresWe use set genes starting MT- set mitochondrial genes","code":"\n# The $ operator can add columns to object metadata. \n# This is a great place to stash QC stats\nseurat_object$percent.mt <- PercentageFeatureSet(seurat_object, pattern = \"^MT-\")"},{"path":"qc.html","id":"challenge-the-meta.data-slot-in-the-seurat-object","chapter":"5 QC Filtering","heading":"Challenge: The meta.data slot in the Seurat object","text":"QC metrics stored Seurat?number unique genes total molecules automatically calculated CreateSeuratObject()\ncan find stored object meta data\ncan find stored object meta dataWhat notice changed within meta.data table now calculated mitochondrial gene proportion?","code":""},{"path":"qc.html","id":"section-2","chapter":"5 QC Filtering","heading":"","text":"example , visualize QC metrics. use filter cells.","code":"\n# Visualize QC metrics as a violin plot\nVlnPlot(seurat_object, features = c(\"nFeature_RNA\", \"nCount_RNA\", \"percent.mt\"), ncol = 3)\n#> Warning: Default search for \"data\" layer in \"RNA\" assay\n#> yielded no results; utilizing \"counts\" layer instead.\n# FeatureScatter is typically used to visualize feature-feature relationships, \n# but can be used for anything calculated by the object, \n# i.e. columns in object metadata, PC scores etc.\nFeatureScatter(seurat_object, feature1 = \"nCount_RNA\", feature2 = \"percent.mt\") \nFeatureScatter(seurat_object, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") "},{"path":"qc.html","id":"challenge-red-blood-cells","chapter":"5 QC Filtering","heading":"Challenge: Red Blood Cells","text":"Genes “HBA1”, “HBA2”, “HBB” components hemoglobin red blood cells.Use PercentageFeatureSet, passing genes “features” argument, find cells might red blood cells.cells high genes differ cells, terms number features total count?remove cells?","code":""},{"path":"qc.html","id":"section-3","chapter":"5 QC Filtering","heading":"","text":"Let’s look number features (genes) percent mitochondrial genes plot.can check different thresholds mito percentage.Ok, let’s go filters:filter cells >200 unique featuresWe filter cells >5% mitochondrial countsLet’s apply subset data. remove cells think poor quality.Let’s replot feature scatters see look like.also wondered cells high counts might doublets. also filter cells high counts? data, know certain doublets!","code":"\nVlnPlot(seurat_object, features = \"nFeature_RNA\")\n#> Warning: Default search for \"data\" layer in \"RNA\" assay\n#> yielded no results; utilizing \"counts\" layer instead.\n\n# Zoom in to the max and min \nVlnPlot(seurat_object, features = \"nFeature_RNA\") + scale_y_continuous(limits = c(1000,3000))\n#> Warning: Default search for \"data\" layer in \"RNA\" assay\n#> yielded no results; utilizing \"counts\" layer instead.\n#> Scale for y is already present.\n#> Adding another scale for y, which will replace the existing scale.\n#> Warning: Removed 4624 rows containing non-finite outside\n#> the scale range (`stat_ydensity()`).\n#> Warning: Removed 4624 rows containing missing values or\n#> values outside the scale range (`geom_point()`).\nVlnPlot(seurat_object, features = \"nFeature_RNA\", y.max =1000)\n#> Warning: Default search for \"data\" layer in \"RNA\" assay\n#> yielded no results; utilizing \"counts\" layer instead.\n#> Warning: Removed 376 rows containing non-finite outside the\n#> scale range (`stat_ydensity()`).\n#> Warning: Removed 376 rows containing missing values or\n#> values outside the scale range (`geom_point()`).\n\nFeatureScatter(seurat_object, feature1 = \"nFeature_RNA\", feature2 = \"percent.mt\") \n#Number of cells that would be left after filters\n# Proportion of cells with less than 5% mito\n\nmean(seurat_object$percent.mt < 5) \n#> [1] 0.983\n\n# Proportion of cells with less than 2% mito\n\nmean(seurat_object$percent.mt < 2)\n#> [1] 0.5158\nseurat_object <- subset(seurat_object, subset = nFeature_RNA > 200 & percent.mt < 5)\nFeatureScatter(seurat_object, feature1 = \"nCount_RNA\", feature2 = \"percent.mt\") \nFeatureScatter(seurat_object, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\") \nFeatureScatter(seurat_object, feature1 = \"nCount_RNA\", feature2 = \"nFeature_RNA\", group.by=\"multiplets\") "},{"path":"norm.html","id":"norm","chapter":"6 Normalisation","heading":"6 Normalisation","text":"","code":""},{"path":"norm.html","id":"why-do-we-need-to-do-this-1","chapter":"6 Normalisation","heading":"Why do we need to do this?","text":"sequencing depth can different per cell. can bias counts expression showing higher numbers sequenced cells leading wrong biological conclusions. correct feature counts normalized.","code":""},{"path":"norm.html","id":"section-4","chapter":"6 Normalisation","heading":"","text":"removing unwanted cells dataset, next step normalize data. default, employ global-scaling normalization method “LogNormalize” normalizes feature expression measurements cell total expression, multiplies scale factor (10,000 default), log-transforms result. Normalized values stored seurat_object$RNA@data.clarity, previous line code (future commands), provide default values certain parameters function call. However, isn’t required behavior can achieved :options normalization SCTtransform popularized 2019, however Log base normalization continued preferred perform better see mo details.","code":"\nseurat_object <- NormalizeData(seurat_object, normalization.method = \"LogNormalize\", scale.factor = 1e4)\n#> Normalizing layer: counts\nseurat_object <- NormalizeData(seurat_object)"},{"path":"reducedims.html","id":"reducedims","chapter":"7 PCAs and UMAPs","heading":"7 PCAs and UMAPs","text":"","code":""},{"path":"reducedims.html","id":"identification-of-highly-variable-features-feature-selection","chapter":"7 PCAs and UMAPs","heading":"7.1 Identification of highly variable features (feature selection)","text":"","code":""},{"path":"reducedims.html","id":"why-do-we-need-to-do-this-2","chapter":"7 PCAs and UMAPs","heading":"Why do we need to do this?","text":"Identifying variable features allows retaining real biological variability data reduce noise data.","code":""},{"path":"reducedims.html","id":"section-5","chapter":"7 PCAs and UMAPs","heading":"","text":"next calculate subset features exhibit high cell--cell variation dataset (.e, highly expressed cells, lowly expressed others). Seurat authors others found focusing genes downstream analysis helps highlight biological signal single-cell datasets.procedure Seurat described detail , improves previous versions directly modeling mean-variance relationship inherent single-cell data, implemented FindVariableFeatures() function. default, Seurat returns 2,000 features per dataset. used downstream analysis, like PCA.","code":"\nseurat_object <- FindVariableFeatures(seurat_object, selection.method = 'vst', nfeatures = 2000)\n#> Finding variable features for layer counts\n# Identify the 10 most highly variable genes\ntop10 <- head(VariableFeatures(seurat_object), 10)\n# plot variable features with and without labels\nplot1 <- VariableFeaturePlot(seurat_object)\nplot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)\n#> When using repel, set xnudge and ynudge to 0 for optimal results\nplot2\n#> Warning in scale_x_log10(): log-10 transformation\n#> introduced infinite values."},{"path":"reducedims.html","id":"scaling-the-data","chapter":"7 PCAs and UMAPs","heading":"7.2 Scaling the data","text":"","code":""},{"path":"reducedims.html","id":"why-do-we-need-to-do-this-3","chapter":"7 PCAs and UMAPs","heading":"Why do we need to do this?","text":"Highly expresed genes can overpower signal less expresed genes equal importance. Within cell assumption underlying RNA content constant. Aditionally, variables provided vars..regress, individually regressed feature, resulting residuals scaled centered. step allows controling cell cycle factors may bias clustering.","code":""},{"path":"reducedims.html","id":"section-6","chapter":"7 PCAs and UMAPs","heading":"","text":"Next, apply linear transformation (‘scaling’) standard pre-processing step prior dimensional reduction techniques like PCA. ScaleData() function:Shifts expression gene, mean expression across cells 0Scales expression gene, variance across cells 1\nstep gives equal weight downstream analyses, highly-expressed genes dominate\nstep gives equal weight downstream analyses, highly-expressed genes dominateThe results stored seurat_object$RNA@scale.dataScaling essential step Seurat workflow, genes used input PCA. Therefore, default ScaleData() perform scaling previously identified variable features (2,000 default). , omit features argument previous function call, .e.Seurat v2 also use ScaleData() function remove unwanted sources variation single-cell dataset. example, ‘regress ’ heterogeneity associated (example) cell cycle stage, mitochondrial contamination. features still supported ScaleData() Seurat v3, .e.: ","code":"\nall.genes <- rownames(seurat_object)\nseurat_object <- ScaleData(seurat_object, features = all.genes)\n#> Centering and scaling data matrix\n# seurat_object <- ScaleData(seurat_object)\n# seurat_object <- ScaleData(seurat_object, vars.to.regress = 'percent.mt')"},{"path":"dimensionality-reduction.html","id":"dimensionality-reduction","chapter":"8 Dimensionality reduction","heading":"8 Dimensionality reduction","text":"","code":""},{"path":"dimensionality-reduction.html","id":"why-do-we-need-to-do-this-4","chapter":"8 Dimensionality reduction","heading":"Why do we need to do this?","text":"Imagine gene represents dimension - axis plot. plot expression two genes simple scatterplot. genome thousands genes - collate information genes way allows visualise 2 dimensional image. dimensionality reduction comes , calculate meta-features contains combinations variation different genes. thousands genes, end 10s meta-features","code":""},{"path":"dimensionality-reduction.html","id":"section-7","chapter":"8 Dimensionality reduction","heading":"","text":"","code":""},{"path":"dimensionality-reduction.html","id":"perform-linear-dimensional-reduction","chapter":"8 Dimensionality reduction","heading":"8.1 Perform linear dimensional reduction","text":"Next perform PCA scaled data. default, previously determined variable features used input, can defined using features argument wish choose different subset.Seurat provides several useful ways visualizing cells features define PCA, including VizDimReduction(), DimPlot(), DimHeatmap()particular DimHeatmap() allows easy exploration primary sources heterogeneity dataset, can useful trying decide PCs include downstream analyses. cells features ordered according PCA scores. Setting cells number plots ‘extreme’ cells ends spectrum, dramatically speeds plotting large datasets. Though clearly supervised analysis, find valuable tool exploring correlated feature sets.","code":"\nseurat_object <- RunPCA(seurat_object, features = VariableFeatures(object = seurat_object))\n#> PC_ 1 \n#> Positive:  CCR7, TRAT1, CREM, ALOX5AP, NKG7, TSC22D3, CST7, PASK, GPR171, CD8A \n#>     CD8B, ADTRP, SVIP, PRF1, MYC, NOP58, TTC39C, SESN3, CMTM8, C14orf1 \n#>     GRAP2, GZMA, TARBP1, KLRD1, CD320, GCHFR, AMICA1, TUBA4A, DDIT4, NOB1 \n#> Negative:  TYROBP, SOD2, TIMP1, TYMP, ANXA5, LGALS3, KYNU, FCN1, LYZ, APOBEC3A \n#>     CD68, NPC2, S100A11, CTSL, MAFB, HLA-DRA, SDCBP, S100A10, PLAUR, GSTO1 \n#>     IL4I1, IDO1, PILRA, LILRB4, S100A9, MS4A7, FGL2, CXCL11, HLA-DRB1, C3AR1 \n#> PC_ 2 \n#> Positive:  CD14, S100A8, PID1, CD9, GPX1, THBS1, PLAUR, C19orf59, OSM, CTB-61M7.2 \n#>     MGST1, S100A9, GAPDH, C5AR1, SLC7A11, ATP6V0B, PPIF, CXCL2, TGFBI, PFN1 \n#>     LIMS1, OLR1, PLIN2, TIMP1, COTL1, CYP1B1, PDLIM7, SLC11A1, CYP27A1, CEBPB \n#> Negative:  IFIT3, MX1, IFIT2, TNFSF10, IFI6, RSAD2, OAS1, CXCL11, MT2A, IRF7 \n#>     IFITM3, OASL, GBP1, IDO1, PLSCR1, DDX58, CMPK2, APOBEC3A, FAM26F, BST2 \n#>     HES4, IFIH1, RABGAP1L, IL27, VAMP5, SERPING1, GMPR, SPATS2L, IRG1, IL4I1 \n#> PC_ 3 \n#> Positive:  ANXA1, NKG7, PRF1, GZMA, KLRD1, MT2A, S100A8, S100A9, OASL, CD300E \n#>     CST7, C3AR1, CD8A, TYROBP, CD14, S100A12, S100A6, FCGR3A, CTSL, FCN1 \n#>     MAFB, GCHFR, KLRC1, S100A11, IFI6, C5AR1, AQP9, CD8B, C19orf59, FPR1 \n#> Negative:  HLA-DQA1, CD83, HLA-DQB1, HLA-DRA, HLA-DRB1, HLA-DMA, HERPUD1, HSP90AB1, CCR7, ID3 \n#>     PKIB, TCF4, FABP5, BANK1, HSPD1, CLIC2, CD79B, FSCN1, HSPH1, CMTM6 \n#>     CD40, TNFRSF13B, SQLE, ALDH2, LY9, NME1, HSP90AA1, CKS2, HAPLN3, IGLL5 \n#> PC_ 4 \n#> Positive:  CCR7, ADTRP, TRAT1, MYC, CMTM8, PASK, TARBP1, CTSL, S100A9, SOCS3 \n#>     S100A8, SGTB, EMP3, TSC22D3, FBLN7, SESN3, NEXN, GBP1, NPC2, MPRIP \n#>     IL27, S100A12, CCR1, HSP90AB1, PPA1, FCN1, SOD2, RSAD2, GPR171, APOBEC3A \n#> Negative:  NKG7, CST7, PRF1, KLRD1, GZMA, ID2, KLRC1, TNFRSF18, RAMP1, IGFBP7 \n#>     ALOX5AP, CD8A, GCHFR, GNG2, GAPDH, FCGR3A, XCL2, PRR5L, ANXA1, OASL \n#>     RAB27A, EIF4EBP1, HAVCR2, PKIB, RHOC, GZMK, LINC00996, ADAM8, GSN, BST2 \n#> PC_ 5 \n#> Positive:  S100A9, SLC7A11, MGST1, S100A8, P2RY6, CCR5, LYZ, FPR3, FABP5, RSAD2 \n#>     SDS, EMP1, CCR1, IFI6, DHRS9, PRF1, CSTB, LILRB4, MX1, SPHK1 \n#>     IDO1, TGFBI, CXCL2, ANXA1, CCNA1, HSP90B1, NKG7, CMPK2, S100A12, LPXN \n#> Negative:  FCGR3A, MS4A4A, MS4A7, CXCL16, PPM1N, SMPDL3A, AIF1, SERPINA1, CDKN1C, ADA \n#>     CH25H, PLAC8, C3AR1, IL3RA, PILRA, CFD, CLEC12A, VMP1, FGL2, VNN2 \n#>     FCGR3B, MTMR11, C1QA, MAPKAPK3, LILRB2, COTL1, FAM26F, FPR2, IFNGR2, IL15\n# Examine and visualize PCA results a few different ways\nprint(seurat_object$pca, dims = 1:5, nfeatures = 5)\n#> PC_ 1 \n#> Positive:  CCR7, TRAT1, CREM, ALOX5AP, NKG7 \n#> Negative:  TYROBP, SOD2, TIMP1, TYMP, ANXA5 \n#> PC_ 2 \n#> Positive:  CD14, S100A8, PID1, CD9, GPX1 \n#> Negative:  IFIT3, MX1, IFIT2, TNFSF10, IFI6 \n#> PC_ 3 \n#> Positive:  ANXA1, NKG7, PRF1, GZMA, KLRD1 \n#> Negative:  HLA-DQA1, CD83, HLA-DQB1, HLA-DRA, HLA-DRB1 \n#> PC_ 4 \n#> Positive:  CCR7, ADTRP, TRAT1, MYC, CMTM8 \n#> Negative:  NKG7, CST7, PRF1, KLRD1, GZMA \n#> PC_ 5 \n#> Positive:  S100A9, SLC7A11, MGST1, S100A8, P2RY6 \n#> Negative:  FCGR3A, MS4A4A, MS4A7, CXCL16, PPM1N\nVizDimLoadings(seurat_object, dims = 1:2, reduction = 'pca')\nDimPlot(seurat_object, reduction = 'pca')\nDimHeatmap(seurat_object, dims = 1, cells = 500, balanced = TRUE)\nDimHeatmap(seurat_object, dims = 1:15, cells = 500, balanced = TRUE)"},{"path":"dimensionality-reduction.html","id":"determine-the-dimensionality-of-the-dataset","chapter":"8 Dimensionality reduction","heading":"8.2 Determine the ‘dimensionality’ of the dataset","text":"overcome extensive technical noise single feature scRNA-seq data, Seurat clusters cells based PCA scores, PC essentially representing ‘metafeature’ combines information across correlated feature set. top principal components therefore represent robust compression dataset. However, many components choose include? 10? 20? 100?Note: Seurat developers suggest using JackStraw resampling test determine . See Macosko et al, original seurat_object3 vignette. ’re going use Elbow Plot instead , much quicker.alternative heuristic method generates ‘Elbow plot’: ranking principle components based percentage variance explained one (ElbowPlot() function). example, can observe ‘elbow’ around PC9-10, suggesting majority true signal captured first 10 PCs.Identifying true dimensionality dataset – can challenging/uncertain user. therefore suggest three approaches consider. first supervised, exploring PCs determine relevant sources heterogeneity, used conjunction GSEA example. second implements statistical test based random null model, time-consuming large datasets, may return clear PC cutoff. third heuristic commonly used, can calculated instantly. example, three approaches yielded similar results, might justified choosing anything PC 7-12 cutoff.chose 10 , encourage users consider following:original version vignette PBMC3k dataset, genes strongly associated PCs 12 13 defined rare immune subsets (.e. MZB1 marker plasmacytoid DCs). However, groups rare, difficult distinguish background noise dataset size without prior knowledge.encourage users repeat downstream analyses different number PCs (10, 15, even 50!). observe, results often differ dramatically.advise users err higher side choosing parameter. example, performing downstream analyses 5 PCs significantly adversely affect results.","code":"\nElbowPlot(seurat_object)"},{"path":"dimensionality-reduction.html","id":"run-non-linear-dimensional-reduction-umaptsne","chapter":"8 Dimensionality reduction","heading":"8.3 Run non-linear dimensional reduction (UMAP/tSNE)","text":"Seurat offers several non-linear dimensional reduction techniques, tSNE UMAP, visualize explore datasets. goal algorithms learn underlying manifold data order place similar cells together low-dimensional space. Cells within graph-based clusters determined co-localize dimension reduction plots. input UMAP tSNE, suggest using PCs input clustering analysis.","code":"\nseurat_object <- RunUMAP(seurat_object, dims = 1:10)\n#> Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\n#> To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\n#> This message will be shown once per session\n#> 07:14:04 UMAP embedding parameters a = 0.9922 b = 1.112\n#> 07:14:04 Read 4877 rows and found 10 numeric columns\n#> 07:14:04 Using Annoy for neighbor search, n_neighbors = 30\n#> 07:14:04 Building Annoy index with metric = cosine, n_trees = 50\n#> 0%   10   20   30   40   50   60   70   80   90   100%\n#> [----|----|----|----|----|----|----|----|----|----|\n#> **************************************************|\n#> 07:14:04 Writing NN index file to temp file /var/folders/ww/bxqtlszx6cz42v_7kxxc2r7w0000gn/T//RtmpKQXpvO/file52a7faed54c\n#> 07:14:04 Searching Annoy index using 1 thread, search_k = 3000\n#> 07:14:05 Annoy recall = 100%\n#> 07:14:06 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n#> 07:14:06 Initializing from normalized Laplacian + noise (using RSpectra)\n#> 07:14:06 Commencing optimization for 500 epochs, with 201290 positive edges\n#> 07:14:10 Optimization finished\nDimPlot(seurat_object, reduction = 'umap')"},{"path":"dimensionality-reduction.html","id":"challenge-pc-genes","chapter":"8 Dimensionality reduction","heading":"Challenge: PC genes","text":"can plot gene expression UMAP FeaturePlot() function.Try genes highly weighted principal component analysis. look?","code":""},{"path":"dimensionality-reduction.html","id":"section-8","chapter":"8 Dimensionality reduction","heading":"","text":"","code":""},{"path":"dimensionality-reduction.html","id":"save","chapter":"8 Dimensionality reduction","heading":"8.4 Save","text":"can save object point can easily loaded back readRDS() without rerun computationally intensive steps performed , easily shared collaborators.Tip: faster saving loading, try “qs” package.","code":"\nsaveRDS(seurat_object, file = \"seurat_object_tutorial_saved.rds\") "},{"path":"Harmony.html","id":"Harmony","chapter":"9 Data set integration with Harmony","heading":"9 Data set integration with Harmony","text":"","code":""},{"path":"Harmony.html","id":"why-do-we-need-to-do-this-5","chapter":"9 Data set integration with Harmony","heading":"Why do we need to do this?","text":"can data coming different samples, batches experiments need combine .","code":""},{"path":"Harmony.html","id":"section-9","chapter":"9 Data set integration with Harmony","heading":"","text":"ind identifies cell coming one 8 individuals.stim identifies cell control stimulated IFN-beta.cell contains cell types identified creators data set.multiplets classifies cells singlet doublet.big difference unstimulated stimulated cells. split cells type pairs clusters. difference simply uniform, regress (e.g. using ScaleData(..., vars..regress=\"stim\")). However, can seen PCA plot, difference uniform need something cleverer.use Harmony, can remove non-uniform effects. try remove small differences individuals large difference unstimulated stimulated cells.Harmony operates PCA scores. original gene expression levels remain unaltered.added new set reduced dimensions Seurat object, seurat_object$harmony modified version existing seurat_object$pca reduced dimensions. PCA plot shows large difference ‘ctrl’ ‘stim’, removed harmony reduction.can use harmony way used pca reduction compute UMAP layout find clusters.found good set clusters, usually perform differential expression analysis original data include batches/runs/individuals predictors linear model. example now compare un-stimulated stimulated cells within cluster. particularly nice statistical approach possible convert counts pseudo-bulk data eight individuals, apply bulk RNA-Seq differential expression analysis method. However still problem unstimulated stimulated cells processed separate batches.","code":"\nDimPlot(seurat_object, reduction=\"umap\", group.by=\"ind\")\nDimPlot(seurat_object, reduction=\"umap\", group.by=\"stim\")\n\nseurat_object<- FindNeighbors(seurat_object, reduction=\"pca\", dims=1:10)\n#> Computing nearest neighbor graph\n#> Computing SNN\nseurat_object <- FindClusters(seurat_object, resolution=0.25)\n#> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n#> \n#> Number of nodes: 4877\n#> Number of edges: 171635\n#> \n#> Running Louvain algorithm...\n#> Maximum modularity in 10 random starts: 0.9408\n#> Number of communities: 9\n#> Elapsed time: 0 seconds\nseurat_object$pca_clusters <- seurat_object$seurat_clusters\n\nDimPlot(seurat_object, reduction=\"umap\", group.by=\"pca_clusters\")\nlibrary(harmony)\n#> Loading required package: Rcpp\n\nseurat_object <- RunHarmony(seurat_object, c(\"stim\", \"ind\"), reduction=\"pca\",reduction.save=\"harmony\")\n#> Transposing data matrix\n#> Initializing state using k-means centroids initialization\n#> Harmony 1/10\n#> Harmony 2/10\n#> Harmony 3/10\n#> Harmony 4/10\n#> Harmony converged after 4 iterations\nDimPlot(seurat_object, reduction=\"pca\", group.by=\"stim\")\nDimPlot(seurat_object, reduction=\"harmony\", group.by=\"stim\")\nseurat_object <- RunUMAP(seurat_object, reduction=\"harmony\", dims=1:10, reduction.name=\"umap_harmony\")\n#> 07:14:19 UMAP embedding parameters a = 0.9922 b = 1.112\n#> 07:14:19 Read 4877 rows and found 10 numeric columns\n#> 07:14:19 Using Annoy for neighbor search, n_neighbors = 30\n#> 07:14:19 Building Annoy index with metric = cosine, n_trees = 50\n#> 0%   10   20   30   40   50   60   70   80   90   100%\n#> [----|----|----|----|----|----|----|----|----|----|\n#> **************************************************|\n#> 07:14:19 Writing NN index file to temp file /var/folders/ww/bxqtlszx6cz42v_7kxxc2r7w0000gn/T//RtmpKQXpvO/file52a794a5e9c\n#> 07:14:19 Searching Annoy index using 1 thread, search_k = 3000\n#> 07:14:20 Annoy recall = 100%\n#> 07:14:20 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 30\n#> 07:14:21 Initializing from normalized Laplacian + noise (using RSpectra)\n#> 07:14:21 Commencing optimization for 500 epochs, with 203630 positive edges\n#> 07:14:25 Optimization finished\n\nDimPlot(seurat_object, reduction=\"umap_harmony\", group.by=\"stim\")\n\nseurat_object <- FindNeighbors(seurat_object, reduction=\"harmony\", dims=1:10)\n#> Computing nearest neighbor graph\n#> Computing SNN\nseurat_object <- FindClusters(seurat_object, resolution=0.25)\n#> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n#> \n#> Number of nodes: 4877\n#> Number of edges: 169427\n#> \n#> Running Louvain algorithm...\n#> Maximum modularity in 10 random starts: 0.9201\n#> Number of communities: 8\n#> Elapsed time: 0 seconds\nseurat_object$harmony_clusters <- seurat_object$seurat_clusters\n\nDimPlot(seurat_object, reduction=\"umap_harmony\", group.by=\"harmony_clusters\")\nDimPlot(seurat_object, reduction=\"umap\", group.by=\"harmony_clusters\")"},{"path":"clustering.html","id":"clustering","chapter":"10 Clustering","heading":"10 Clustering","text":"","code":""},{"path":"clustering.html","id":"why-do-we-need-to-do-this-6","chapter":"10 Clustering","heading":"Why do we need to do this?","text":"Clustering cells allow visualise variability data, can help segregate cells cell types.","code":""},{"path":"clustering.html","id":"section-10","chapter":"10 Clustering","heading":"","text":"","code":""},{"path":"clustering.html","id":"cluster-cells","chapter":"10 Clustering","heading":"10.1 Cluster cells","text":"Seurat v3 applies graph-based clustering approach, building upon initial strategies (Macosko et al). Importantly, distance metric drives clustering analysis (based previously identified PCs) remains . However, approach partitioning cellular distance matrix clusters dramatically improved. approach heavily inspired recent manuscripts applied graph-based clustering approaches scRNA-seq data [SNN-Cliq, Xu Su, Bioinformatics, 2015] CyTOF data [PhenoGraph, Levine et al., Cell, 2015]. Briefly, methods embed cells graph structure - example K-nearest neighbor (KNN) graph, edges drawn cells similar feature expression patterns, attempt partition graph highly interconnected ‘quasi-cliques’ ‘communities’.PhenoGraph, first construct KNN graph based euclidean distance PCA space, refine edge weights two cells based shared overlap local neighborhoods (Jaccard similarity). step performed using FindNeighbors() function, takes input previously defined dimensionality dataset (first 10 PCs).cluster cells, next apply modularity optimization techniques Louvain algorithm (default) SLM [SLM, Blondel et al., Journal Statistical Mechanics], iteratively group cells together, goal optimizing standard modularity function. FindClusters() function implements procedure, contains resolution parameter sets ‘granularity’ downstream clustering, increased values leading greater number clusters. find setting parameter 0.4-1.2 typically returns good results single-cell datasets around 3K cells. Optimal resolution often increases larger datasets. clusters can found using Idents() function.Check clusters.","code":"\nseurat_object <- FindNeighbors(seurat_object, dims = 1:10)\n#> Computing nearest neighbor graph\n#> Computing SNN\nseurat_object <- FindClusters(seurat_object, resolution = 0.5)\n#> Modularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n#> \n#> Number of nodes: 4877\n#> Number of edges: 171635\n#> \n#> Running Louvain algorithm...\n#> Maximum modularity in 10 random starts: 0.9106\n#> Number of communities: 13\n#> Elapsed time: 0 seconds\n# Look at cluster IDs of the first 5 cells\nhead(Idents(seurat_object), 5)\n#> AGGGCGCTATTTCC-1 GGAGACGATTCGTT-1 CACCGTTGTCGTAG-1 \n#>                3                0                9 \n#> TATCGTACACGCAT-1 TACGAGACCTATTC-1 \n#>                6                0 \n#> Levels: 0 1 2 3 4 5 6 7 8 9 10 11 12\nDimPlot(seurat_object,reduction = \"umap_harmony\")\n# Equivalent to\n# DimPlot(seurat_object,reduction=\"umap\", group.by=\"seurat_clusters\")\n# DimPlot(seurat_object,reduction=\"umap\", group.by=\"RNA_snn_res.0.5\")"},{"path":"clustering.html","id":"challenge-try-different-cluster-settings","chapter":"10 Clustering","heading":"Challenge: Try different cluster settings","text":"Run FindNeighbours FindClusters , different number dimensions different resolution. Examine resulting clusters using DimPlot.maintain flow tutorial, please put output exploration different variable, seurat_object2!","code":""},{"path":"clustering.html","id":"section-11","chapter":"10 Clustering","heading":"","text":"","code":""},{"path":"clustering.html","id":"choosing-a-cluster-resolution","chapter":"10 Clustering","heading":"10.2 Choosing a cluster resolution","text":"good idea try different resolutions clustering identify variability data.Plot clustree decide many clusters resolution capture .Name cells corresponding cluster name resolution pick. case happy 0.5.Plot UMAP colored clusters Dimplot","code":"\nresolution = 2\nseurat_object <- FindClusters(object = seurat_object, reduction = \"umap_harmony\", resolution = seq(0.1, resolution, 0.1),\n    dims = 1:10)\n\n# the different clustering created\nnames(seurat_object@meta.data)\n\n# Look at cluster IDs of the first 5 cells\nhead(Idents(seurat_object), 5)\nlibrary(clustree)\n#> Loading required package: ggraph\n#> \n#> Attaching package: 'ggraph'\n#> The following object is masked from 'package:sp':\n#> \n#>     geometry\nclustree(seurat_object, prefix = \"RNA_snn_res.\",show_axis=TRUE) + theme(legend.key.size = unit(0.05, \"cm\"))\n# The name of the cluster is prefixed with 'RNA_snn_res' and the number of the resolution\nIdents(seurat_object) <- seurat_object$RNA_snn_res.0.5\nDimPlot(seurat_object, reduction = \"umap_harmony\", label = TRUE, repel = TRUE, label.box = TRUE) + NoLegend()"},{"path":"clustermarkers.html","id":"clustermarkers","chapter":"11 Cluster Markers","heading":"11 Cluster Markers","text":"","code":""},{"path":"clustermarkers.html","id":"why-do-we-need-to-do-this-7","chapter":"11 Cluster Markers","heading":"Why do we need to do this?","text":"Single cell data helps segragate cell types. Use markers identify cell types. warning: example cell types/markers well known making step easy, reality step needs experts curation.","code":""},{"path":"clustermarkers.html","id":"section-12","chapter":"11 Cluster Markers","heading":"","text":"","code":""},{"path":"clustermarkers.html","id":"finding-differentially-expressed-features-cluster-biomarkers","chapter":"11 Cluster Markers","heading":"11.1 Finding differentially expressed features (cluster biomarkers)","text":"Seurat can help find markers define clusters via differential expression. default, identifies positive negative markers single cluster (specified ident.1), compared cells. FindAllMarkers() automates process clusters, can also test groups clusters vs. , cells.min.pct argument requires feature detected minimum percentage either two groups cells, thresh.test argument requires feature differentially expressed (average) amount two groups. can set 0, dramatic increase time - since test large number features unlikely highly discriminatory. another option speed computations, max.cells.per.ident can set. downsample identity class cells whatever set . generally going loss power, speed increases can significant highly differentially expressed features likely still rise top.Seurat several tests differential expression can set test.use parameter (see DE vignette details). example, ROC test returns ‘classification power’ abs(AUC-0.5)*2 individual marker, ranging 0 = random 1 = perfect.include several tools visualizing marker expression. VlnPlot() (shows expression probability distributions across clusters), FeaturePlot() (visualizes feature expression tSNE PCA plot) commonly used visualizations. also suggest exploring RidgePlot(), CellScatter(), DotPlot() additional methods view dataset.ridgeplots, cell scatter plots dotplots. Replace FeaturePlot functions.\nCellScatter plots, need cell id cells want look . can get cell metadata (seurat_object@meta.data).DotPlotsDoHeatmap() generates expression heatmap given cells features. case, plotting top 10 markers (markers less 10) cluster.","code":"\n# find all markers of cluster 2\ncluster2.markers <- FindMarkers(seurat_object, ident.1 = 2, min.pct = 0.25)\n#> For a (much!) faster implementation of the Wilcoxon Rank Sum Test,\n#> (default method for FindMarkers) please install the presto package\n#> --------------------------------------------\n#> install.packages('devtools')\n#> devtools::install_github('immunogenomics/presto')\n#> --------------------------------------------\n#> After installation of presto, Seurat will automatically use the more \n#> efficient implementation (no further action necessary).\n#> This message will be shown once per session\nhead(cluster2.markers, n = 5)\n#>          p_val avg_log2FC pct.1 pct.2 p_val_adj\n#> IL8          0   4.906436 0.866 0.080         0\n#> S100A8       0   4.872239 0.840 0.079         0\n#> C15orf48     0   2.261521 0.971 0.221         0\n#> S100A4       0   2.983846 0.926 0.243         0\n#> CD14         0   4.442936 0.742 0.060         0\n# find all markers distinguishing cluster 5 from clusters 0 and 3\ncluster5.markers <- FindMarkers(seurat_object, ident.1 = 5, ident.2 = c(0, 3), min.pct = 0.25)\nhead(cluster5.markers, n = 5)\n#>              p_val avg_log2FC pct.1 pct.2     p_val_adj\n#> NKG7 1.879762e-282   6.238335 0.843 0.043 6.698531e-278\n#> GZMB 6.686736e-249   6.681676 0.736 0.027 2.382818e-244\n#> GNLY 1.517538e-232   6.405572 0.751 0.049 5.407747e-228\n#> PRF1 1.506816e-222   6.054882 0.699 0.036 5.369539e-218\n#> CCL5 2.473417e-203   4.789833 0.801 0.106 8.814022e-199\n# find markers for every cluster compared to all remaining cells, report only the positive ones\nseurat_object.markers <- FindAllMarkers(seurat_object, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)\n#> Calculating cluster 0\n#> Calculating cluster 1\n#> Calculating cluster 2\n#> Calculating cluster 3\n#> Calculating cluster 4\n#> Calculating cluster 5\n#> Calculating cluster 6\n#> Calculating cluster 7\n#> Calculating cluster 8\n#> Calculating cluster 9\n#> Calculating cluster 10\n#> Calculating cluster 11\n#> Calculating cluster 12\nseurat_object.markers %>% group_by(cluster) %>% slice_max(n = 2, order_by = avg_log2FC)\n#> # A tibble: 26 × 7\n#> # Groups:   cluster [13]\n#>        p_val avg_log2FC pct.1 pct.2 p_val_adj cluster gene  \n#>        <dbl>      <dbl> <dbl> <dbl>     <dbl> <fct>   <chr> \n#>  1 2.80e-177       1.93 0.71  0.276 9.99e-173 0       SELL  \n#>  2 1.26e-216       1.77 0.872 0.42  4.48e-212 0       GIMAP7\n#>  3 1.35e- 55       1.99 0.26  0.081 4.80e- 51 1       LEF1  \n#>  4 5.70e- 45       1.97 0.25  0.089 2.03e- 40 1       NSMCE1\n#>  5 0               6.25 0.485 0.01  0         2       CLEC5A\n#>  6 0               5.76 0.454 0.014 0         2       VCAN  \n#>  7 0               7.46 0.894 0.067 0         3       CCL8  \n#>  8 1.93e-136       6.33 0.265 0.024 6.88e-132 3       APOBE…\n#>  9 5.97e-176       4.28 0.405 0.039 2.13e-171 4       FGFBP2\n#> 10 0               3.59 0.859 0.118 0         4       NKG7  \n#> # ℹ 16 more rows\ncluster0.markers <- FindMarkers(seurat_object, ident.1 = 0, logfc.threshold = 0.25, test.use = \"roc\", only.pos = TRUE)\nVlnPlot(seurat_object, features = c(\"MS4A1\", \"CD79A\"))\n# you can plot raw counts as well\nVlnPlot(seurat_object, features = c(\"NKG7\", \"PF4\"), slot = 'counts', log = TRUE)\n#> Warning: The `slot` argument of `VlnPlot()` is deprecated as of Seurat 5.0.0.\n#> ℹ Please use the `layer` argument instead.\n#> This warning is displayed once every 8 hours.\n#> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\nFeaturePlot(seurat_object, features = c(\"MS4A1\", \"GNLY\", \"CD3E\", \"CD14\", \"FCER1A\"))\nFeaturePlot(seurat_object, features = c(\"FCGR3A\", \"LYZ\", \"PPBP\", \"CD8A\"))\nRidgePlot(seurat_object, features = c(\"MS4A1\", \"GNLY\", \"CD3E\", \"CD14\", \"FCER1A\"))\n#> Picking joint bandwidth of 0.0599\n#> Picking joint bandwidth of 0.0897\n#> Picking joint bandwidth of 0.0721\n#> Picking joint bandwidth of 0.0628\n#> Picking joint bandwidth of 3.07e-06\nRidgePlot(seurat_object, features = c(\"FCGR3A\", \"LYZ\", \"PPBP\", \"CD8A\"))\n#> Picking joint bandwidth of 0.0753\n#> Picking joint bandwidth of 0.15\n#> Picking joint bandwidth of 0.0606\n#> Picking joint bandwidth of 0.0491\nhead( seurat_object@meta.data )\n#>                     orig.ident nCount_RNA nFeature_RNA  ind\n#> AGGGCGCTATTTCC-1 SeuratProject       2053          532 1256\n#> GGAGACGATTCGTT-1 SeuratProject        881          392 1256\n#> CACCGTTGTCGTAG-1 SeuratProject       3130         1005 1016\n#> TATCGTACACGCAT-1 SeuratProject       1042          549 1488\n#> TACGAGACCTATTC-1 SeuratProject       2425          777 1244\n#> GTACTACTCATACG-1 SeuratProject       3951         1064 1256\n#>                  stim              cell multiplets\n#> AGGGCGCTATTTCC-1 stim   CD14+ Monocytes    singlet\n#> GGAGACGATTCGTT-1 stim       CD4 T cells    singlet\n#> CACCGTTGTCGTAG-1 ctrl FCGR3A+ Monocytes    singlet\n#> TATCGTACACGCAT-1 stim           B cells    singlet\n#> TACGAGACCTATTC-1 stim       CD4 T cells    singlet\n#> GTACTACTCATACG-1 ctrl FCGR3A+ Monocytes    singlet\n#>                  percent.mt RNA_snn_res.0.25\n#> AGGGCGCTATTTCC-1  1.6336634                1\n#> GGAGACGATTCGTT-1  4.8809524                0\n#> CACCGTTGTCGTAG-1  1.0655473                4\n#> TATCGTACACGCAT-1  3.0662710                3\n#> TACGAGACCTATTC-1  1.0837849                0\n#> GTACTACTCATACG-1  0.7137395                4\n#>                  seurat_clusters pca_clusters\n#> AGGGCGCTATTTCC-1               1            3\n#> GGAGACGATTCGTT-1              12            0\n#> CACCGTTGTCGTAG-1              15            7\n#> TATCGTACACGCAT-1               8            5\n#> TACGAGACCTATTC-1               7            0\n#> GTACTACTCATACG-1              15            7\n#>                  harmony_clusters RNA_snn_res.0.5\n#> AGGGCGCTATTTCC-1                1               3\n#> GGAGACGATTCGTT-1                0               0\n#> CACCGTTGTCGTAG-1                4               9\n#> TATCGTACACGCAT-1                3               6\n#> TACGAGACCTATTC-1                0               0\n#> GTACTACTCATACG-1                4               9\n#>                  RNA_snn_res.0.1 RNA_snn_res.0.2\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               1               0\n#> CACCGTTGTCGTAG-1               2               7\n#> TATCGTACACGCAT-1               4               5\n#> TACGAGACCTATTC-1               1               0\n#> GTACTACTCATACG-1               2               7\n#>                  RNA_snn_res.0.3 RNA_snn_res.0.4\n#> AGGGCGCTATTTCC-1               2               3\n#> GGAGACGATTCGTT-1               0               0\n#> CACCGTTGTCGTAG-1               9               9\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9               9\n#>                  RNA_snn_res.0.6 RNA_snn_res.0.7\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               0               0\n#> CACCGTTGTCGTAG-1               9               9\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9               9\n#>                  RNA_snn_res.0.8 RNA_snn_res.0.9\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               0               9\n#> CACCGTTGTCGTAG-1               9              10\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9              10\n#>                  RNA_snn_res.1 RNA_snn_res.1.1\n#> AGGGCGCTATTTCC-1             3               3\n#> GGAGACGATTCGTT-1            10              10\n#> CACCGTTGTCGTAG-1            11              11\n#> TATCGTACACGCAT-1             6               6\n#> TACGAGACCTATTC-1             0               0\n#> GTACTACTCATACG-1            11              11\n#>                  RNA_snn_res.1.2 RNA_snn_res.1.3\n#> AGGGCGCTATTTCC-1               2               2\n#> GGAGACGATTCGTT-1              11              12\n#> CACCGTTGTCGTAG-1              12              13\n#> TATCGTACACGCAT-1               6               7\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1              12              13\n#>                  RNA_snn_res.1.4 RNA_snn_res.1.5\n#> AGGGCGCTATTTCC-1               2               2\n#> GGAGACGATTCGTT-1              13              13\n#> CACCGTTGTCGTAG-1              14              14\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1              14              14\n#>                  RNA_snn_res.1.6 RNA_snn_res.1.7\n#> AGGGCGCTATTTCC-1               2               3\n#> GGAGACGATTCGTT-1              13              13\n#> CACCGTTGTCGTAG-1              14              14\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               6               1\n#> GTACTACTCATACG-1              14              14\n#>                  RNA_snn_res.1.8 RNA_snn_res.1.9\n#> AGGGCGCTATTTCC-1               1               2\n#> GGAGACGATTCGTT-1              14              14\n#> CACCGTTGTCGTAG-1              15              15\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               3               1\n#> GTACTACTCATACG-1              15              15\n#>                  RNA_snn_res.2\n#> AGGGCGCTATTTCC-1             1\n#> GGAGACGATTCGTT-1            12\n#> CACCGTTGTCGTAG-1            15\n#> TATCGTACACGCAT-1             8\n#> TACGAGACCTATTC-1             7\n#> GTACTACTCATACG-1            15\n\nCellScatter(seurat_object, cell1 = \"AGGGCGCTATTTCC-1\", cell2 = \"GGAGACGATTCGTT-1\")\n\nCellScatter(seurat_object, cell1 = \"GGAGACGATTCGTT-1\", cell2 = \"TACGAGACCTATTC-1\")\nDotPlot(seurat_object, features = c(\"MS4A1\", \"GNLY\", \"CD3E\", \"CD14\", \"FCER1A\", \"FCGR3A\", \"LYZ\", \"PPBP\", \"CD8A\"))\ntop10 <- seurat_object.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_log2FC)\nDoHeatmap(seurat_object, features = top10$gene) + NoLegend()"},{"path":"clustermarkers.html","id":"use-makers-to-label-or-find-a-cluster","chapter":"11 Cluster Markers","heading":"11.2 Use makers to label or find a cluster","text":"know markers cell types, use AddModuleScore label .","code":"\ngenes_markers <- list(Naive_CD4_T = c(\"IL7R\", \"CCR7\"))\n\nseurat_object <- AddModuleScore(object = seurat_object, features = genes_markers, ctrl = 5, name = \"Naive_CD4_T\",\n    search = TRUE)\n\n\n# notice the name of the cluster has a 1 at the end\nnames(seurat_object@meta.data)\n#>  [1] \"orig.ident\"       \"nCount_RNA\"      \n#>  [3] \"nFeature_RNA\"     \"ind\"             \n#>  [5] \"stim\"             \"cell\"            \n#>  [7] \"multiplets\"       \"percent.mt\"      \n#>  [9] \"RNA_snn_res.0.25\" \"seurat_clusters\" \n#> [11] \"pca_clusters\"     \"harmony_clusters\"\n#> [13] \"RNA_snn_res.0.5\"  \"RNA_snn_res.0.1\" \n#> [15] \"RNA_snn_res.0.2\"  \"RNA_snn_res.0.3\" \n#> [17] \"RNA_snn_res.0.4\"  \"RNA_snn_res.0.6\" \n#> [19] \"RNA_snn_res.0.7\"  \"RNA_snn_res.0.8\" \n#> [21] \"RNA_snn_res.0.9\"  \"RNA_snn_res.1\"   \n#> [23] \"RNA_snn_res.1.1\"  \"RNA_snn_res.1.2\" \n#> [25] \"RNA_snn_res.1.3\"  \"RNA_snn_res.1.4\" \n#> [27] \"RNA_snn_res.1.5\"  \"RNA_snn_res.1.6\" \n#> [29] \"RNA_snn_res.1.7\"  \"RNA_snn_res.1.8\" \n#> [31] \"RNA_snn_res.1.9\"  \"RNA_snn_res.2\"   \n#> [33] \"Naive_CD4_T1\"\n\n# label that cell type\nseurat_object$cell_label = NA\nseurat_object$cell_label[seurat_object$Naive_CD4_T1 > 1] = \"Naive_CD4_T\"\nIdents(seurat_object) = seurat_object$cell_label\n\n# plot\n# Using a custom colour scale \nFeaturePlot(seurat_object, features = \"Naive_CD4_T1\", label = TRUE, repel = TRUE, reduction = \"umap_harmony\") + scale_colour_gradientn(colours = c(\"lightblue\",\"beige\",\"red\"))\n#> Scale for colour is already present.\n#> Adding another scale for colour, which will replace the existing scale."},{"path":"clustermarkers.html","id":"assigning-cell-type-identity-to-clusters","chapter":"11 Cluster Markers","heading":"11.3 Assigning cell type identity to clusters","text":"Fortunately case dataset, can use canonical markers easily match unbiased clustering known cell types:","code":"\n\n\nDimPlot(seurat_object,group.by = \"RNA_snn_res.0.2\",reduction = \"umap_harmony\")|FeaturePlot(seurat_object, features = c( \"MS4A1\"),reduction = \"umap_harmony\")"},{"path":"clustermarkers.html","id":"challenge-match-cluster-numbers-with-cell-labels","chapter":"11 Cluster Markers","heading":"Challenge: Match cluster numbers with cell labels","text":"Use markers provided resolution 0.2 identity cell labels","code":"Idents(seurat_object) <- seurat_object$RNA_snn_res.0.2\n# this is not the proper order. Make sure the labels are in the same order that the numers they should replace\nnew.cluster.ids <- c(\"Naive CD4 T\",\"B cells\",\"CD14+ Monocytes\",\"CD4 T cells\",\"CD8 T cells\", \"Dendritic cells\", \"FCGR3A+ Monocytes\",\"Megakaryocytes\" )\nnames(new.cluster.ids) <- levels(seurat_object)\nseurat_object <- RenameIdents(seurat_object, new.cluster.ids)\nDimPlot(seurat_object, reduction = 'umap_harmony', label = TRUE, pt.size = 0.5) + NoLegend()"},{"path":"clustermarkers.html","id":"section-13","chapter":"11 Cluster Markers","heading":"","text":"","code":""},{"path":"clustermarkers.html","id":"save-the-plots","chapter":"11 Cluster Markers","heading":"11.3.0.1 save the plots","text":"","code":""},{"path":"clustermarkers.html","id":"save-the-seurat-object","chapter":"11 Cluster Markers","heading":"11.3.0.2 save the seurat object","text":"","code":"\nsaveRDS(seurat_object, file = \"seurat_object3k_final.rds\")"},{"path":"singler.html","id":"singler","chapter":"12 SingleR","heading":"12 SingleR","text":"workshop focused Seurat package. However, another whole ecosystem R packages single cell analysis within Bioconductor. won’t go detail packages workshop, good material describing object type online : OSCA.now, ’ll just convert Seurat object object called SingleCellExperiment. popular packages Bioconductor work type Slingshot, Scran, Scater.now use package called SingleR label cell. SingleR uses reference data set cell types expression data infer best label cell. convenient collection cell type reference celldex package currently contains follow sets:example, ’ll use HumanPrimaryCellAtlasData set, contains high-level, fine-grained label types. Lets download reference datasetThe “main” labels.example types “fine” labels.Now ’ll label cells using SingleCellExperiment object, reference set.Keep types 10 cells label, put labels back Seurat object plot umap.Compare cell labels different annotation methods:","code":"\n#install.packages(\"BiocManager\")\n#BiocManager::install(c(\"SingleCellExperiment\",\"SingleR\",\"celldex\"),ask=F)\nlibrary(SingleCellExperiment)\nlibrary(SingleR)\nlibrary(celldex)\nsce <- as.SingleCellExperiment(seurat_object)\nsce\n#> class: SingleCellExperiment \n#> dim: 35635 4877 \n#> metadata(0):\n#> assays(3): counts logcounts scaledata\n#> rownames(35635): MIR1302-10 FAM138A ... MT-ND6 MT-CYB\n#> rowData names(0):\n#> colnames(4877): AGGGCGCTATTTCC-1 GGAGACGATTCGTT-1 ...\n#>   ATGTTGCTAAAAGC-1 GATGACACTAGCGT-1\n#> colData names(35): orig.ident nCount_RNA ...\n#>   cell_label ident\n#> reducedDimNames(4): PCA UMAP HARMONY UMAP_HARMONY\n#> mainExpName: RNA\n#> altExpNames(0):\nls('package:celldex')\n#>  [1] \"BlueprintEncodeData\"             \n#>  [2] \"DatabaseImmuneCellExpressionData\"\n#>  [3] \"defineTextQuery\"                 \n#>  [4] \"fetchLatestVersion\"              \n#>  [5] \"fetchMetadata\"                   \n#>  [6] \"fetchReference\"                  \n#>  [7] \"HumanPrimaryCellAtlasData\"       \n#>  [8] \"ImmGenData\"                      \n#>  [9] \"listReferences\"                  \n#> [10] \"listVersions\"                    \n#> [11] \"MonacoImmuneData\"                \n#> [12] \"MouseRNAseqData\"                 \n#> [13] \"NovershternHematopoieticData\"    \n#> [14] \"saveReference\"                   \n#> [15] \"searchReferences\"                \n#> [16] \"surveyReferences\"\n# This too is a sce object,\n# colData is equivalent to seurat's metadata\nref.set <- celldex::HumanPrimaryCellAtlasData()\nunique(ref.set$label.main)\n#>  [1] \"DC\"                   \"Smooth_muscle_cells\" \n#>  [3] \"Epithelial_cells\"     \"B_cell\"              \n#>  [5] \"Neutrophils\"          \"T_cells\"             \n#>  [7] \"Monocyte\"             \"Erythroblast\"        \n#>  [9] \"BM & Prog.\"           \"Endothelial_cells\"   \n#> [11] \"Gametocytes\"          \"Neurons\"             \n#> [13] \"Keratinocytes\"        \"HSC_-G-CSF\"          \n#> [15] \"Macrophage\"           \"NK_cell\"             \n#> [17] \"Embryonic_stem_cells\" \"Tissue_stem_cells\"   \n#> [19] \"Chondrocytes\"         \"Osteoblasts\"         \n#> [21] \"BM\"                   \"Platelets\"           \n#> [23] \"Fibroblasts\"          \"iPS_cells\"           \n#> [25] \"Hepatocytes\"          \"MSC\"                 \n#> [27] \"Neuroepithelial_cell\" \"Astrocyte\"           \n#> [29] \"HSC_CD34+\"            \"CMP\"                 \n#> [31] \"GMP\"                  \"MEP\"                 \n#> [33] \"Myelocyte\"            \"Pre-B_cell_CD34-\"    \n#> [35] \"Pro-B_cell_CD34+\"     \"Pro-Myelocyte\"\nhead(unique(ref.set$label.fine))\n#> [1] \"DC:monocyte-derived:immature\"       \n#> [2] \"DC:monocyte-derived:Galectin-1\"     \n#> [3] \"DC:monocyte-derived:LPS\"            \n#> [4] \"DC:monocyte-derived\"                \n#> [5] \"Smooth_muscle_cells:bronchial:vit_D\"\n#> [6] \"Smooth_muscle_cells:bronchial\"\npred.cnts <- SingleR::SingleR(test = sce, ref = ref.set, labels = ref.set$label.main)\nlbls.keep <- table(pred.cnts$labels)>10\nseurat_object$SingleR.labels <- ifelse(lbls.keep[pred.cnts$labels], pred.cnts$labels, 'Other')\nDimPlot(seurat_object, reduction='umap_harmony', group.by='SingleR.labels')\nDimPlot(seurat_object,group.by = \"RNA_snn_res.0.2\",reduction = \"umap_harmony\")\n\nDimPlot(seurat_object,group.by = \"cell\",reduction = \"umap_harmony\")"},{"path":"de2.html","id":"de2","chapter":"13 Differential Expression","heading":"13 Differential Expression","text":"many different methods calculating differential expression groups scRNAseq data. number review papers worth consulting topic.Seurat differential expression Vignette walks variety implemented Seurat.also good discussion useing pseudobulk approaches worth checking youre planning differential expression analyses.cells condition ?many cells per individuals per group?sample, many cell type classified?","code":"\nhead(seurat_object@meta.data)\n#>                     orig.ident nCount_RNA nFeature_RNA  ind\n#> AGGGCGCTATTTCC-1 SeuratProject       2053          532 1256\n#> GGAGACGATTCGTT-1 SeuratProject        881          392 1256\n#> CACCGTTGTCGTAG-1 SeuratProject       3130         1005 1016\n#> TATCGTACACGCAT-1 SeuratProject       1042          549 1488\n#> TACGAGACCTATTC-1 SeuratProject       2425          777 1244\n#> GTACTACTCATACG-1 SeuratProject       3951         1064 1256\n#>                  stim              cell multiplets\n#> AGGGCGCTATTTCC-1 stim   CD14+ Monocytes    singlet\n#> GGAGACGATTCGTT-1 stim       CD4 T cells    singlet\n#> CACCGTTGTCGTAG-1 ctrl FCGR3A+ Monocytes    singlet\n#> TATCGTACACGCAT-1 stim           B cells    singlet\n#> TACGAGACCTATTC-1 stim       CD4 T cells    singlet\n#> GTACTACTCATACG-1 ctrl FCGR3A+ Monocytes    singlet\n#>                  percent.mt RNA_snn_res.0.25\n#> AGGGCGCTATTTCC-1  1.6336634                1\n#> GGAGACGATTCGTT-1  4.8809524                0\n#> CACCGTTGTCGTAG-1  1.0655473                4\n#> TATCGTACACGCAT-1  3.0662710                3\n#> TACGAGACCTATTC-1  1.0837849                0\n#> GTACTACTCATACG-1  0.7137395                4\n#>                  seurat_clusters pca_clusters\n#> AGGGCGCTATTTCC-1               1            3\n#> GGAGACGATTCGTT-1              12            0\n#> CACCGTTGTCGTAG-1              15            7\n#> TATCGTACACGCAT-1               8            5\n#> TACGAGACCTATTC-1               7            0\n#> GTACTACTCATACG-1              15            7\n#>                  harmony_clusters RNA_snn_res.0.5\n#> AGGGCGCTATTTCC-1                1               3\n#> GGAGACGATTCGTT-1                0               0\n#> CACCGTTGTCGTAG-1                4               9\n#> TATCGTACACGCAT-1                3               6\n#> TACGAGACCTATTC-1                0               0\n#> GTACTACTCATACG-1                4               9\n#>                  RNA_snn_res.0.1 RNA_snn_res.0.2\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               1               0\n#> CACCGTTGTCGTAG-1               2               7\n#> TATCGTACACGCAT-1               4               5\n#> TACGAGACCTATTC-1               1               0\n#> GTACTACTCATACG-1               2               7\n#>                  RNA_snn_res.0.3 RNA_snn_res.0.4\n#> AGGGCGCTATTTCC-1               2               3\n#> GGAGACGATTCGTT-1               0               0\n#> CACCGTTGTCGTAG-1               9               9\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9               9\n#>                  RNA_snn_res.0.6 RNA_snn_res.0.7\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               0               0\n#> CACCGTTGTCGTAG-1               9               9\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9               9\n#>                  RNA_snn_res.0.8 RNA_snn_res.0.9\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               0               9\n#> CACCGTTGTCGTAG-1               9              10\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9              10\n#>                  RNA_snn_res.1 RNA_snn_res.1.1\n#> AGGGCGCTATTTCC-1             3               3\n#> GGAGACGATTCGTT-1            10              10\n#> CACCGTTGTCGTAG-1            11              11\n#> TATCGTACACGCAT-1             6               6\n#> TACGAGACCTATTC-1             0               0\n#> GTACTACTCATACG-1            11              11\n#>                  RNA_snn_res.1.2 RNA_snn_res.1.3\n#> AGGGCGCTATTTCC-1               2               2\n#> GGAGACGATTCGTT-1              11              12\n#> CACCGTTGTCGTAG-1              12              13\n#> TATCGTACACGCAT-1               6               7\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1              12              13\n#>                  RNA_snn_res.1.4 RNA_snn_res.1.5\n#> AGGGCGCTATTTCC-1               2               2\n#> GGAGACGATTCGTT-1              13              13\n#> CACCGTTGTCGTAG-1              14              14\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1              14              14\n#>                  RNA_snn_res.1.6 RNA_snn_res.1.7\n#> AGGGCGCTATTTCC-1               2               3\n#> GGAGACGATTCGTT-1              13              13\n#> CACCGTTGTCGTAG-1              14              14\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               6               1\n#> GTACTACTCATACG-1              14              14\n#>                  RNA_snn_res.1.8 RNA_snn_res.1.9\n#> AGGGCGCTATTTCC-1               1               2\n#> GGAGACGATTCGTT-1              14              14\n#> CACCGTTGTCGTAG-1              15              15\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               3               1\n#> GTACTACTCATACG-1              15              15\n#>                  RNA_snn_res.2 Naive_CD4_T1  cell_label\n#> AGGGCGCTATTTCC-1             1   -0.3540023        <NA>\n#> GGAGACGATTCGTT-1            12    2.1376158 Naive_CD4_T\n#> CACCGTTGTCGTAG-1            15   -1.1487836        <NA>\n#> TATCGTACACGCAT-1             8    0.5557941        <NA>\n#> TACGAGACCTATTC-1             7    1.4250065 Naive_CD4_T\n#> GTACTACTCATACG-1            15   -0.2082793        <NA>\n#>                  SingleR.labels\n#> AGGGCGCTATTTCC-1       Monocyte\n#> GGAGACGATTCGTT-1        T_cells\n#> CACCGTTGTCGTAG-1       Monocyte\n#> TATCGTACACGCAT-1    Neutrophils\n#> TACGAGACCTATTC-1        T_cells\n#> GTACTACTCATACG-1       Monocyte\ntable(seurat_object$stim)\n#> \n#> ctrl stim \n#> 2378 2499\ntable(seurat_object$ind, seurat_object$stim)\n#>       \n#>        ctrl stim\n#>   101   175  226\n#>   107   115  106\n#>   1015  503  489\n#>   1016  335  348\n#>   1039   87  100\n#>   1244  373  311\n#>   1256  384  385\n#>   1488  406  534\ntable(paste(seurat_object$ind,seurat_object$stim), seurat_object$cell)\n#>            \n#>             B cells CD14+ Monocytes CD4 T cells CD8 T cells\n#>   101 ctrl       23              47          60          15\n#>   101 stim       30              52          83          17\n#>   1015 ctrl      79             149         142          44\n#>   1015 stim      68             149         148          21\n#>   1016 ctrl      21              71          82         107\n#>   1016 stim      29              65          65         109\n#>   1039 ctrl       7              32          36           6\n#>   1039 stim       6              26          48           5\n#>   107 ctrl        9              50          32           6\n#>   107 stim        9              35          43           1\n#>   1244 ctrl      23              85         202           8\n#>   1244 stim      18              58         191           4\n#>   1256 ctrl      32              80         176          26\n#>   1256 stim      42              70         194          25\n#>   1488 ctrl      36              59         246          13\n#>   1488 stim      59              59         319          15\n#>            \n#>             Dendritic cells FCGR3A+ Monocytes\n#>   101 ctrl                4                11\n#>   101 stim                6                23\n#>   1015 ctrl               3                49\n#>   1015 stim              17                43\n#>   1016 ctrl               4                21\n#>   1016 stim               2                32\n#>   1039 ctrl               1                 3\n#>   1039 stim               1                 6\n#>   107 ctrl                3                12\n#>   107 stim                2                 5\n#>   1244 ctrl               8                19\n#>   1244 stim               6                 4\n#>   1256 ctrl               6                20\n#>   1256 stim               3                11\n#>   1488 ctrl               8                25\n#>   1488 stim              12                28\n#>            \n#>             Megakaryocytes NK cells\n#>   101 ctrl               4       11\n#>   101 stim               1       14\n#>   1015 ctrl              5       32\n#>   1015 stim              5       38\n#>   1016 ctrl              3       26\n#>   1016 stim              1       45\n#>   1039 ctrl              1        1\n#>   1039 stim              3        5\n#>   107 ctrl               0        3\n#>   107 stim               0       11\n#>   1244 ctrl              3       25\n#>   1244 stim              4       26\n#>   1256 ctrl              1       43\n#>   1256 stim              7       33\n#>   1488 ctrl              4       15\n#>   1488 stim              6       36"},{"path":"de2.html","id":"prefiltering","chapter":"13 Differential Expression","heading":"13.1 Prefiltering","text":"","code":""},{"path":"de2.html","id":"why-do-we-need-to-do-this-8","chapter":"13 Differential Expression","heading":"Why do we need to do this?","text":"expression certain level, almost impossible see differential expression.","code":""},{"path":"de2.html","id":"section-14","chapter":"13 Differential Expression","heading":"","text":"differential expression, generally ignore genes low expression.\nsingle cell datasets, many genes like . Filtering make dataset smaller runs quicker, less aggressive correction multiple hypotheses.many genes filtering?many copies gene ?Lets keep genes least 50 copies across entire experiment.many genes filtering?might like see effect IFN-beta stimulation cell type individually. purposes workshop, just going test one cell type; CD14+ MonocytesAn easy way subset object.","code":"\nseurat_object\n#> An object of class Seurat \n#> 35635 features across 4877 samples within 1 assay \n#> Active assay: RNA (35635 features, 2000 variable features)\n#>  3 layers present: counts, data, scale.data\n#>  4 dimensional reductions calculated: pca, umap, harmony, umap_harmony\ntotal_per_gene <- rowSums(GetAssayData(seurat_object, assay='RNA', slot='counts'))\n#> Warning: The `slot` argument of `GetAssayData()` is deprecated as of SeuratObject 5.0.0.\n#> ℹ Please use the `layer` argument instead.\n#> This warning is displayed once every 8 hours.\n#> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\nhist(log10(total_per_gene))\nseurat_object<- seurat_object[total_per_gene >= 50, ] \nseurat_object\n#> An object of class Seurat \n#> 7200 features across 4877 samples within 1 assay \n#> Active assay: RNA (7200 features, 1236 variable features)\n#>  3 layers present: counts, data, scale.data\n#>  4 dimensional reductions calculated: pca, umap, harmony, umap_harmony\n# Set idents to 'cell' column.\nIdents(seurat_object) <- seurat_object$cell\nDimPlot(seurat_object, reduction = \"umap_harmony\")\nseurat_object_celltype <- seurat_object[, seurat_object$cell == \"CD14+ Monocytes\" ]\nDimPlot(seurat_object_celltype, reduction = \"umap_harmony\")"},{"path":"de2.html","id":"default-wilcox-test","chapter":"13 Differential Expression","heading":"13.2 Default Wilcox test","text":"run test, change Idents factor(column) want test. case, ’s ‘stim’.Look top differentially expressed genes.","code":"\n# Change Ident to Condition\nIdents(seurat_object_celltype) <- seurat_object_celltype$stim\n\n# default, wilcox test\nde_result_wilcox <- FindMarkers(seurat_object_celltype, \n            ident.1 = 'stim',\n            ident.2 = 'ctrl',\n            logfc.threshold = 0, # Give me ALL results\n            min.pct = 0\n            )\n\n# Add average expression for plotting\nde_result_wilcox$AveExpr<- rowMeans(seurat_object_celltype[rownames(de_result_wilcox),])\nhead(de_result_wilcox)\n#>                 p_val avg_log2FC pct.1 pct.2     p_val_adj\n#> RSAD2   8.471603e-196   6.797508 0.979 0.044 6.099554e-192\n#> TNFSF10 3.399691e-195   6.559853 0.982 0.056 2.447777e-191\n#> CXCL10  5.809758e-195   8.034949 0.975 0.038 4.183025e-191\n#> IFIT3   7.214495e-195   6.234703 0.982 0.051 5.194437e-191\n#> IFIT1   1.224398e-188   6.764699 0.953 0.026 8.815662e-185\n#> ISG15   1.228738e-186   6.377243 1.000 0.323 8.846914e-183\n#>            AveExpr\n#> RSAD2   0.04196286\n#> TNFSF10 0.51655832\n#> CXCL10  3.25184139\n#> IFIT3   0.02032398\n#> IFIT1   0.01254584\n#> ISG15   0.14165156\np1 <- ggplot(de_result_wilcox, aes(x=AveExpr, y=avg_log2FC, col=p_val_adj < 0.05)) +\n  geom_point() +\n  scale_colour_manual(values=c('TRUE'=\"red\",'FALSE'=\"black\")) + \n  theme_bw() +\n  ggtitle(\"Wilcox Test\")\n\n\np2 <- ggplot(de_result_wilcox, aes(x=avg_log2FC, y=-log10(p_val), col=p_val_adj < 0.05)) +\n  geom_point() +\n  scale_colour_manual(values=c('TRUE'=\"red\",'FALSE'=\"black\")) + \n  theme_bw() +\n  ggtitle(\"Wilcox Test (Volcano)\")\n\np1 + p2"},{"path":"de2.html","id":"seurat-negative-binomial","chapter":"13 Differential Expression","heading":"13.3 Seurat Negative binomial","text":"Negative binonial test run almost way - just need specify ‘test.use’Look top differentially expressed genes.","code":"\n\n# Change Ident to Condition\nIdents(seurat_object_celltype) <- seurat_object_celltype$stim\n\n# default, wilcox test\nde_result_negbinom <- FindMarkers(seurat_object_celltype, \n            test.use=\"negbinom\", # Choose a different test.\n            ident.1 = 'stim',\n            ident.2 = 'ctrl',\n            logfc.threshold = 0, # Give me ALL results\n            min.pct = 0\n)\n\n# Add average expression for plotting\nde_result_negbinom$AveExpr<- rowMeans(seurat_object_celltype[rownames(de_result_negbinom),])\nhead(de_result_negbinom)\n#>          p_val avg_log2FC pct.1 pct.2 p_val_adj    AveExpr\n#> CXCL10       0   8.034949 0.975 0.038         0 0.04196286\n#> CCL8         0   8.160755 0.912 0.023         0 0.51655832\n#> LY6E         0   4.880093 0.979 0.134         0 3.25184139\n#> APOBEC3A     0   4.745713 0.996 0.262         0 0.02032398\n#> IFITM3       0   4.675898 0.998 0.271         0 0.01254584\n#> IFI6         0   3.935122 0.982 0.257         0 0.14165156\np1 <- ggplot(de_result_negbinom, aes(x=AveExpr, y=avg_log2FC, col=p_val_adj < 0.05)) +\n  geom_point() +\n  scale_colour_manual(values=c('TRUE'=\"red\",'FALSE'=\"black\")) + \n  theme_bw() +\n  ggtitle(\"Negative Bionomial Test\")\n\n\np2 <- ggplot(de_result_negbinom, aes(x=avg_log2FC, y=-log10(p_val), col=p_val_adj < 0.05)) +\n  geom_point() +\n  scale_colour_manual(values=c('TRUE'=\"red\",'FALSE'=\"black\")) + \n  theme_bw() +\n  ggtitle(\"Negative Bionomial Test (Volcano)\")\n\np1 + p2"},{"path":"de2.html","id":"pseudobulk","chapter":"13 Differential Expression","heading":"13.4 Pseudobulk","text":"Pseudobulk analysis option biological replicates. essentially pooling individual cell counts treating expreiment like bulk RNAseq.First, need build pseudobulk matrix - AggregateExpression() function can , set ‘Idents’ seurat object grouping factor (, thats combination individual+treatment called ‘sample’, instead ‘stim’ treatment column).Now looks like bulk RNAseq experiment, treat like one.can use popular limma package differential expression. one tutorial, hefty reference manual hosted bioconductor.brief, code constructs linear model experiment accounts variation individuals treatment. tests differential expression ‘stim’ ‘ctrl’ groups.Look significantly differentially expressed genes:","code":"\n# Tools for bulk differential expression\nlibrary(limma)\n#> \n#> Attaching package: 'limma'\n#> The following object is masked from 'package:BiocGenerics':\n#> \n#>     plotMA\nlibrary(edgeR)\n#> \n#> Attaching package: 'edgeR'\n#> The following object is masked from 'package:SingleCellExperiment':\n#> \n#>     cpm\n\n\n# Change idents to ind for grouping.\nseurat_object_celltype$sample <- factor(paste(seurat_object_celltype$stim, seurat_object_celltype$ind, sep=\"_\"))\nIdents(seurat_object_celltype) <- seurat_object_celltype$sample\n\n# THen pool together counts in those groups\n# AggregateExperssion returns a list of matricies - one for each assay requested (even just requesting one)\npseudobulk_matrix_list <- AggregateExpression( seurat_object_celltype,  slot = 'counts', assays='RNA' )\n#> Names of identity class contain underscores ('_'), replacing with dashes ('-')\n#> This message is displayed once every 8 hours.\npseudobulk_matrix      <- pseudobulk_matrix_list[['RNA']]\ncolnames(pseudobulk_matrix) <- as.character(colnames(pseudobulk_matrix)) # Changes colnames to simple text\npseudobulk_matrix[1:5,1:4]\n#> 5 x 4 sparse Matrix of class \"dgCMatrix\"\n#>          ctrl-101 ctrl-1015 ctrl-1016 ctrl-1039\n#> NOC2L           2         7         .         .\n#> HES4            .         3         2         1\n#> ISG15          31       185       234        41\n#> TNFRSF18        .         3         4         2\n#> TNFRSF4         .         2         .         .\ndge <- DGEList(pseudobulk_matrix)\ndge <- calcNormFactors(dge)\n\n# Remove _ or - and everything after it - yeilds stim group\nstim <- gsub(\"[-_].*\",\"\",colnames(pseudobulk_matrix)) \n\n# Removing everything before the _ or - for the individual, then converting those numerical ind explictiy to text. Else limma will treat them as numbers!\nind  <- as.character(gsub(\".*[-_]\",\"\",colnames(pseudobulk_matrix))) \n\ndesign <- model.matrix( ~0 + stim + ind)\nvm  <- voom(dge, design = design, plot = FALSE)\nfit <- lmFit(vm, design = design)\n\ncontrasts <- makeContrasts(stimstim - stimctrl, levels=coef(fit))\nfit <- contrasts.fit(fit, contrasts)\nfit <- eBayes(fit)\n\nde_result_pseudobulk <- topTable(fit, n = Inf, adjust.method = \"BH\")\nde_result_pseudobulk <- arrange(de_result_pseudobulk , adj.P.Val)\nhead(de_result_pseudobulk)\n#>           logFC   AveExpr        t      P.Value\n#> ISG20  5.161336 10.313033 35.72209 9.838370e-31\n#> ISG15  6.932960 11.897783 34.63778 3.049704e-30\n#> CXCL11 9.050139  7.263356 32.46019 3.282727e-29\n#> IFIT3  6.987552  8.423467 28.97126 2.052443e-27\n#> HERC5  6.999781  5.604886 28.65574 3.050588e-27\n#> CXCL10 8.708460  9.715253 28.25406 5.081902e-27\n#>           adj.P.Val        B\n#> ISG20  7.083626e-27 60.13277\n#> ISG15  1.097894e-26 59.02083\n#> CXCL11 7.878545e-26 55.45779\n#> IFIT3  3.694397e-24 52.01990\n#> HERC5  4.392847e-24 51.18902\n#> CXCL10 5.629458e-24 51.32019\np1 <- ggplot(de_result_pseudobulk, aes(x=AveExpr, y=logFC, col=adj.P.Val < 0.05)) +\n  geom_point() +\n  scale_colour_manual(values=c('TRUE'=\"red\",'FALSE'=\"black\")) + \n  theme_bw() +\n  ggtitle(\"Pseudobulk\")\n\n\np2 <- ggplot(de_result_pseudobulk, aes(x=logFC, y=-log10(P.Value), col=adj.P.Val < 0.05)) +\n  geom_point() +\n  scale_colour_manual(values=c('TRUE'=\"red\",'FALSE'=\"black\")) + \n  theme_bw() +\n  ggtitle(\"Pseudobulk Test (Volcano)\")\n\np1 + p2"},{"path":"de2.html","id":"discussion","chapter":"13 Differential Expression","heading":"Discussion","text":"methods give different results. decide use? check individual gene?","code":""},{"path":"de2.html","id":"section-15","chapter":"13 Differential Expression","heading":"","text":"","code":""},{"path":"CellCycle.html","id":"CellCycle","chapter":"14 Cell cycle Assignment","heading":"14 Cell cycle Assignment","text":"datasets, phase cell cycle cell (G1/G2M/S) can account \nalot observed transcriptomic variation. may clustering phase, \nseparation UMAP phase.Seurat provides simple method assigning cell cycle state cell. methods available.information assigning cell cycle states cells cell cycle vignetteWhich adds S.Score, G2M.Score Phase calls metadata.can check cell phase UMAP. dataset, phase isn’t driving clustering, require handling.bias present, course action depends task hand. might involve ‘regressing ’ cell cycle variation scaling data ScaleData(kang, vars..regress=\"Phase\"), omitting cell-cycle dominated clusters, just accounting differential expression calculations.working non-human data, need convert gene lists, find new cell cycle associated genes species.","code":"\n# A list of cell cycle markers, from Tirosh et al, 2015, is loaded with Seurat.  We can\n# segregate this list into markers of G2/M phase and markers of S phase\ns.genes   <- cc.genes$s.genes\ng2m.genes <- cc.genes$g2m.genes\n\n# Use those lists with the cell cycle scoring function in Seurat.\nseurat_object <- CellCycleScoring(seurat_object, s.features = s.genes, g2m.features = g2m.genes)\n#> Warning: The following features are not present in the\n#> object: TYMS, MCM2, MCM4, UNG, GINS2, CDCA7, DTL, UHRF1,\n#> MLF1IP, HELLS, RAD51AP1, GMNN, WDR76, CCNE2, ATAD2, RAD51,\n#> RRM2, CDC45, CDC6, EXO1, DSCC1, BLM, CASP8AP2, CLSPN,\n#> POLA1, CHAF1B, BRIP1, E2F8, not searching for symbol\n#> synonyms\n#> Warning: The following features are not present in the\n#> object: CDK1, NUSAP1, UBE2C, BIRC5, TPX2, TOP2A, NDC80,\n#> NUF2, MKI67, FAM64A, CCNB2, CKAP2L, AURKB, BUB1, KIF11,\n#> GTSE1, HJURP, CDCA3, CDC20, TTK, CDC25C, KIF2C, NCAPD2,\n#> DLGAP5, CDCA2, CDCA8, ECT2, KIF23, HMMR, AURKA, PSRC1,\n#> ANLN, CENPE, NEK2, GAS2L3, CENPA, not searching for symbol\n#> synonyms\nhead(seurat_object@meta.data)\n#>                     orig.ident nCount_RNA nFeature_RNA  ind\n#> AGGGCGCTATTTCC-1 SeuratProject       2053          532 1256\n#> GGAGACGATTCGTT-1 SeuratProject        881          392 1256\n#> CACCGTTGTCGTAG-1 SeuratProject       3130         1005 1016\n#> TATCGTACACGCAT-1 SeuratProject       1042          549 1488\n#> TACGAGACCTATTC-1 SeuratProject       2425          777 1244\n#> GTACTACTCATACG-1 SeuratProject       3951         1064 1256\n#>                  stim              cell multiplets\n#> AGGGCGCTATTTCC-1 stim   CD14+ Monocytes    singlet\n#> GGAGACGATTCGTT-1 stim       CD4 T cells    singlet\n#> CACCGTTGTCGTAG-1 ctrl FCGR3A+ Monocytes    singlet\n#> TATCGTACACGCAT-1 stim           B cells    singlet\n#> TACGAGACCTATTC-1 stim       CD4 T cells    singlet\n#> GTACTACTCATACG-1 ctrl FCGR3A+ Monocytes    singlet\n#>                  percent.mt RNA_snn_res.0.25\n#> AGGGCGCTATTTCC-1  1.6336634                1\n#> GGAGACGATTCGTT-1  4.8809524                0\n#> CACCGTTGTCGTAG-1  1.0655473                4\n#> TATCGTACACGCAT-1  3.0662710                3\n#> TACGAGACCTATTC-1  1.0837849                0\n#> GTACTACTCATACG-1  0.7137395                4\n#>                  seurat_clusters pca_clusters\n#> AGGGCGCTATTTCC-1               1            3\n#> GGAGACGATTCGTT-1              12            0\n#> CACCGTTGTCGTAG-1              15            7\n#> TATCGTACACGCAT-1               8            5\n#> TACGAGACCTATTC-1               7            0\n#> GTACTACTCATACG-1              15            7\n#>                  harmony_clusters RNA_snn_res.0.5\n#> AGGGCGCTATTTCC-1                1               3\n#> GGAGACGATTCGTT-1                0               0\n#> CACCGTTGTCGTAG-1                4               9\n#> TATCGTACACGCAT-1                3               6\n#> TACGAGACCTATTC-1                0               0\n#> GTACTACTCATACG-1                4               9\n#>                  RNA_snn_res.0.1 RNA_snn_res.0.2\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               1               0\n#> CACCGTTGTCGTAG-1               2               7\n#> TATCGTACACGCAT-1               4               5\n#> TACGAGACCTATTC-1               1               0\n#> GTACTACTCATACG-1               2               7\n#>                  RNA_snn_res.0.3 RNA_snn_res.0.4\n#> AGGGCGCTATTTCC-1               2               3\n#> GGAGACGATTCGTT-1               0               0\n#> CACCGTTGTCGTAG-1               9               9\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9               9\n#>                  RNA_snn_res.0.6 RNA_snn_res.0.7\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               0               0\n#> CACCGTTGTCGTAG-1               9               9\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9               9\n#>                  RNA_snn_res.0.8 RNA_snn_res.0.9\n#> AGGGCGCTATTTCC-1               3               3\n#> GGAGACGATTCGTT-1               0               9\n#> CACCGTTGTCGTAG-1               9              10\n#> TATCGTACACGCAT-1               6               6\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1               9              10\n#>                  RNA_snn_res.1 RNA_snn_res.1.1\n#> AGGGCGCTATTTCC-1             3               3\n#> GGAGACGATTCGTT-1            10              10\n#> CACCGTTGTCGTAG-1            11              11\n#> TATCGTACACGCAT-1             6               6\n#> TACGAGACCTATTC-1             0               0\n#> GTACTACTCATACG-1            11              11\n#>                  RNA_snn_res.1.2 RNA_snn_res.1.3\n#> AGGGCGCTATTTCC-1               2               2\n#> GGAGACGATTCGTT-1              11              12\n#> CACCGTTGTCGTAG-1              12              13\n#> TATCGTACACGCAT-1               6               7\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1              12              13\n#>                  RNA_snn_res.1.4 RNA_snn_res.1.5\n#> AGGGCGCTATTTCC-1               2               2\n#> GGAGACGATTCGTT-1              13              13\n#> CACCGTTGTCGTAG-1              14              14\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               0               0\n#> GTACTACTCATACG-1              14              14\n#>                  RNA_snn_res.1.6 RNA_snn_res.1.7\n#> AGGGCGCTATTTCC-1               2               3\n#> GGAGACGATTCGTT-1              13              13\n#> CACCGTTGTCGTAG-1              14              14\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               6               1\n#> GTACTACTCATACG-1              14              14\n#>                  RNA_snn_res.1.8 RNA_snn_res.1.9\n#> AGGGCGCTATTTCC-1               1               2\n#> GGAGACGATTCGTT-1              14              14\n#> CACCGTTGTCGTAG-1              15              15\n#> TATCGTACACGCAT-1               8               8\n#> TACGAGACCTATTC-1               3               1\n#> GTACTACTCATACG-1              15              15\n#>                  RNA_snn_res.2 Naive_CD4_T1  cell_label\n#> AGGGCGCTATTTCC-1             1   -0.3540023        <NA>\n#> GGAGACGATTCGTT-1            12    2.1376158 Naive_CD4_T\n#> CACCGTTGTCGTAG-1            15   -1.1487836        <NA>\n#> TATCGTACACGCAT-1             8    0.5557941        <NA>\n#> TACGAGACCTATTC-1             7    1.4250065 Naive_CD4_T\n#> GTACTACTCATACG-1            15   -0.2082793        <NA>\n#>                  SingleR.labels     S.Score   G2M.Score\n#> AGGGCGCTATTTCC-1       Monocyte -0.06808986 -0.08878508\n#> GGAGACGATTCGTT-1        T_cells  0.09975063 -0.06812238\n#> CACCGTTGTCGTAG-1       Monocyte -0.12770457  0.16052598\n#> TATCGTACACGCAT-1    Neutrophils  0.08685571 -0.08316351\n#> TACGAGACCTATTC-1        T_cells -0.02572695  0.02074759\n#> GTACTACTCATACG-1       Monocyte -0.07294007 -0.01517046\n#>                  Phase\n#> AGGGCGCTATTTCC-1    G1\n#> GGAGACGATTCGTT-1     S\n#> CACCGTTGTCGTAG-1   G2M\n#> TATCGTACACGCAT-1     S\n#> TACGAGACCTATTC-1   G2M\n#> GTACTACTCATACG-1    G1\nDimPlot(seurat_object, reduction = 'umap_harmony', group.by = \"Phase\")"},{"path":"resources.html","id":"resources","chapter":"15 Resources","heading":"15 Resources","text":"Useful resources next steps.","code":""},{"path":"resources.html","id":"suggested-further-reading-material","chapter":"15 Resources","heading":"15.0.1 Suggested Further Reading Material","text":"Orchestrating Single Cell Analysis Bioconductor - book teaches single cell analysis bioconductor ecosystem packages rather Seurat. Regardless preference Bioconductor Seurat, provides excellent grounding depth rationale behind step single cell analysis.Seurat tutorials gene expression, spatial & multimodal analysisGetting started Signac - sibling package Seurat scATAC analysisMonocle documentationn trajectoriesCell Annotation SingleRVDJ analysis Immcantation","code":""},{"path":"resources.html","id":"useful-links-arising-from-the-discussion-during-the-previous-workshop","chapter":"15 Resources","heading":"15.0.2 Useful links arising from the discussion during the previous workshop","text":"10x Genomics link ribosomal protein expression10x Genomics link mitochondrial gene expressionscRNA Tools, catalogue tools scRNA Seq analysis","code":""},{"path":"resources.html","id":"data-interpretation","chapter":"15 Resources","heading":"15.0.2.1 Data interpretation","text":"Interactive website explaining UMAP comparision t-SNE.OSCA, dimensionality reduction interpretationA simple description PCA UMAP , 3D example.","code":""},{"path":"resources.html","id":"data-tools-and-visualisation","chapter":"15 Resources","heading":"15.0.2.2 Data tools and visualisation","text":"scTransform VignetteLink workflowr libraryiSEE Bioconductor library, interactive explorerShinyCell makes interactive Shiny app Seurat outputiCellR interactive data explorerDiffusion maps single cell instead umaps\n*Projections high-dimensional dataset animated scatter-plot","code":""},{"path":"resources.html","id":"papers","chapter":"15 Resources","heading":"15.0.2.3 Papers","text":"Doublet cell detection method benchmarking paper.Louvain Leiden: guaranteeing well-connected communities","code":""},{"path":"resources.html","id":"reference-data-and-databases","chapter":"15 Resources","heading":"15.0.2.4 Reference data and databases","text":"Gene tissue expression databaseImmGen Database ExplorerSingle Cell Study Portal BroadCommon ref data cell indexingAzimuth Seurat-friendly reference-based annotation toolCelaref, cell reference annotation tool","code":""},{"path":"resources.html","id":"help-and-fruther-resources","chapter":"15 Resources","heading":"15.1 Help and fruther Resources","text":"","code":""},{"path":"resources.html","id":"seurat-vignettes","chapter":"15 Resources","heading":"Seurat Vignettes","text":"https://satijalab.org/seurat/index.htmlThere good many Seurat vigettes different aspects Seurat package. E.g.Guided Clustering tutorial : ’ve just worked thisDifferential expression : Exploration differential expression methods within SeuratData integration : Seurat’s data integration popular method combine different datasets one joint analysis.","code":""},{"path":"resources.html","id":"seurat-cheatsheet","chapter":"15 Resources","heading":"Seurat Cheatsheet","text":"https://satijalab.org/seurat/articles/essential_commands.htmlA useful resource asking; can ‘X’ seurat object?","code":""},{"path":"resources.html","id":"osca","chapter":"15 Resources","heading":"OSCA","text":"https://bioconductor.org/books/release/OSCA/comprehensive resource analysis approaches single cell data.\nuses SingleCellExperiment bioconductor ecosystem, alot principle still apply.includes good discussion useing pseudobulk approaches, worth checking differential expression analyses.","code":""},{"path":"resources.html","id":"mbp-training-reading-list","chapter":"15 Resources","heading":"MBP training Reading list","text":"https://monashbioinformaticsplatform.github.io/Single-Cell-Workshop/workshop page previous workshop (upon one based) run Monash Bioinformatics Platform - bottom \nextensive list useful single cell links resources.","code":""},{"path":"resources.html","id":"biocommons-single-cell-omics","chapter":"15 Resources","heading":"Biocommons Single Cell Omics","text":"https://www.biocommons.org.au/single-cell-omicsJoin single cell omics community resources setup biocommons.","code":""},{"path":"resources.html","id":"data","chapter":"15 Resources","heading":"15.2 Data","text":"","code":""},{"path":"resources.html","id":"demo-10x-data","chapter":"15 Resources","heading":"Demo 10X data","text":"https://www.10xgenomics.com/resources/datasets10X genomics quite example datasets availble download (including PBMC3k).\nuseful resource want see ‘raw’ data looks like particular technology.","code":""},{"path":"resources.html","id":"geo","chapter":"15 Resources","heading":"GEO","text":"https://www.ncbi.nlm.nih.gov/geo/Many papers publish raw single cell data GEO. Formats vary, often can find counts matrix.\n# (PART) resources {-}","code":""},{"path":"resources.html","id":"seurat-data","chapter":"15 Resources","heading":"Seurat data","text":"https://github.com/satijalab/seurat-dataPackage obtaining datasets seurat objects.","code":""},{"path":"resources.html","id":"analysis-tools","chapter":"15 Resources","heading":"15.3 Analysis Tools","text":"handful many tools might worth checking next steps.","code":""},{"path":"resources.html","id":"cyclone","chapter":"15 Resources","heading":"Cyclone","text":"https://pubmed.ncbi.nlm.nih.gov/26142758/Part scran package, cyclone (nother) method determining cell phase.\nDoco","code":""},{"path":"resources.html","id":"harmony","chapter":"15 Resources","heading":"Harmony","text":"https://portals.broadinstitute.org/harmony/articles/quickstart.htmlMethod integration multiple single cell datasets.","code":""},{"path":"resources.html","id":"singler-1","chapter":"15 Resources","heading":"SingleR","text":"http://bioconductor.org/books/release/SingleRBook/extensive documentation singleR package ‘singleR’ book.","code":""},{"path":"resources.html","id":"scrublet","chapter":"15 Resources","heading":"Scrublet","text":"https://github.com/swolock/scrubletA python based tool doublet detection. One many tools space.","code":""},{"path":"resources.html","id":"scvelo","chapter":"15 Resources","heading":"ScVelo","text":"https://scvelo.readthedocs.io/package single cell RNA velocity analysis, useful developmental/pseudotime trajectories. Python/scanpy based.","code":""},{"path":"resources.html","id":"monocle","chapter":"15 Resources","heading":"Monocle","text":"https://cole-trapnell-lab.github.io/monocle3/package single cell developmental//pseudotime trajectory analysis.","code":""},{"path":"resources.html","id":"tidyseurat","chapter":"15 Resources","heading":"TidySeurat","text":"https://stemangiola.github.io/tidyseurat/fans tidyverse-everything, ’s tidyseurat. Example workflow ","code":""},{"path":"resources.html","id":"preprocessing-tools","chapter":"15 Resources","heading":"15.4 Preprocessing Tools","text":"Tooks process raw sequencing data counts matricies","code":""},{"path":"resources.html","id":"cell-ranger","chapter":"15 Resources","heading":"Cell Ranger","text":"https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/--cell-rangerCellRanger 10X tool takes raw fastq sequence files produces counts matricies starting point today’s analysis. works 10X data.","code":""},{"path":"resources.html","id":"starsolo","chapter":"15 Resources","heading":"STARSolo","text":"STAR aligner (actually used within cell ranger). STARSolo tool producing counts matricies, configurable enough use multiple technologies.https://github.com/alexdobin/STAR/blob/master/docs/STARsolo.md","code":""},{"path":"structure.html","id":"structure","chapter":"16 Structure","heading":"16 Structure","text":"","code":""},{"path":"structure.html","id":"load-an-existing-seurat-object","chapter":"16 Structure","heading":"16.1 Load an existing Seurat object","text":"data ’re working today small dataset 5000 PBMCs (peripheral blood mononuclear cells) healthy donor.First, load Seurat package.’s one prepared earlier. Seurat objects usually saved ‘.rds’ files, R format storing binary data (-text human-readable). functions readRDS() can load .","code":"\nlibrary(Seurat)\nseurat_object <- readRDS(\"data/kang2018.rds\")"},{"path":"structure.html","id":"discussion-the-seurat-object-in-r","chapter":"16 Structure","heading":"Discussion: The Seurat Object in R","text":"Lets take look seurat object just created R, seurat_objectTo accomodate complexity data arising single cell RNA seq experiment, seurat object keeps container multiple data tables linked.functions seurat can access parts data object analysis visualization, cover later .essentially data containers R class, can accessed variable R environment.Classes pre-defined can contain multiple data tables metadata. Seurat, three types.Seurat - main data class, contains data.Assay - found within Seurat object. Depending experiment cell data RNA, ATAC etc measuredDimReduc - PCA UMAPSlots parts within class contain specific data. can lists, data tables vectors can accessed conventional R methods.Many functions Seurat operate data class slots within seamlessly. maybe occasion access separately hack , however advanced analysis method.Examples accessing Seurat objectThe assays slot seurat_object can accessed seurat_object@assays.RNA assay can accessed seurat_object@assays$RNA.often want access assays, Seurat nicely gives us shortcut seurat_object$RNA. may sometimes see alternative notation seurat_object[[\"RNA\"]].general, slots always object accessed @ things may different different data sets accessed $.goUse str look structure Seurat object seurat_object.meta.data slot within Seurat object currently? type data contained ?count data within Seurat object?","code":""},{"path":"structure.html","id":"whats-in-there","chapter":"16 Structure","heading":"16.2 What’s in there?","text":"important information working Seurat objects metadata.\ncell level information - row one cell, identified barcode.\nExtra information gets added table analysis progresses.doesn’t gene expression though, ’s stored ‘Assay’.\nAssay structure nuances (see discussion ), functions get assay data .default object return normalised data (assay object, called RNA). Every ‘.’ zero.raw counts data accessible .","code":"\nhead(seurat_object@meta.data)\n#>                     orig.ident nCount_RNA nFeature_RNA  ind\n#> AGGGCGCTATTTCC-1 SeuratProject       2020          523 1256\n#> GGAGACGATTCGTT-1 SeuratProject        840          381 1256\n#> CACCGTTGTCGTAG-1 SeuratProject       3097          995 1016\n#> TATCGTACACGCAT-1 SeuratProject       1011          540 1488\n#> TGACGCCTTGCTTT-1 SeuratProject        570          367  101\n#> TACGAGACCTATTC-1 SeuratProject       2399          770 1244\n#>                  stim              cell multiplets\n#> AGGGCGCTATTTCC-1 stim   CD14+ Monocytes    singlet\n#> GGAGACGATTCGTT-1 stim       CD4 T cells    singlet\n#> CACCGTTGTCGTAG-1 ctrl FCGR3A+ Monocytes    singlet\n#> TATCGTACACGCAT-1 stim           B cells    singlet\n#> TGACGCCTTGCTTT-1 ctrl       CD4 T cells       ambs\n#> TACGAGACCTATTC-1 stim       CD4 T cells    singlet\nGetAssayData(seurat_object)[1:15,1:2]\n#> 15 x 2 sparse Matrix of class \"dgCMatrix\"\n#>               AGGGCGCTATTTCC-1 GGAGACGATTCGTT-1\n#> MIR1302-10                   .                .\n#> FAM138A                      .                .\n#> OR4F5                        .                .\n#> RP11-34P13.7                 .                .\n#> RP11-34P13.8                 .                .\n#> AL627309.1                   .                .\n#> RP11-34P13.14                .                .\n#> RP11-34P13.9                 .                .\n#> AP006222.2                   .                .\n#> RP4-669L17.10                .                .\n#> OR4F29                       .                .\n#> RP4-669L17.2                 .                .\n#> RP5-857K21.15                .                .\n#> RP5-857K21.1                 .                .\n#> RP5-857K21.2                 .                .\nGetAssayData(seurat_object, slot='counts')[1:15,1:2]\n#> 15 x 2 sparse Matrix of class \"dgCMatrix\"\n#>               AGGGCGCTATTTCC-1 GGAGACGATTCGTT-1\n#> MIR1302-10                   .                .\n#> FAM138A                      .                .\n#> OR4F5                        .                .\n#> RP11-34P13.7                 .                .\n#> RP11-34P13.8                 .                .\n#> AL627309.1                   .                .\n#> RP11-34P13.14                .                .\n#> RP11-34P13.9                 .                .\n#> AP006222.2                   .                .\n#> RP4-669L17.10                .                .\n#> OR4F29                       .                .\n#> RP4-669L17.2                 .                .\n#> RP5-857K21.15                .                .\n#> RP5-857K21.1                 .                .\n#> RP5-857K21.2                 .                ."},{"path":"acknowledgements.html","id":"acknowledgements","chapter":"17 Acknowledgements","heading":"17 Acknowledgements","text":"material mostly based Seurat introductory tutorial.also draws material workshop provided QCIF developed Sarah Williams Ahmed Mehdi Australian Biocommons.","code":""},{"path":"session-info.html","id":"session-info","chapter":"18 Session info","heading":"18 Session info","text":"R version 4.4.1 (2024-06-14)Platform: aarch64-apple-darwin20locale:\nen_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8attached base packages:\nstats4, stats, graphics, grDevices, utils, datasets, methods baseother attached packages:\npander(v.0.6.5), edgeR(v.4.4.0), limma(v.3.62.0), celldex(v.1.16.0), SingleR(v.2.8.0), SingleCellExperiment(v.1.28.0), SummarizedExperiment(v.1.36.0), Biobase(v.2.66.0), GenomicRanges(v.1.58.0), GenomeInfoDb(v.1.42.0), IRanges(v.2.40.0), S4Vectors(v.0.44.0), BiocGenerics(v.0.52.0), MatrixGenerics(v.1.18.0), matrixStats(v.1.4.1), clustree(v.0.5.1), ggraph(v.2.2.1), harmony(v.1.2.1), Rcpp(v.1.0.13), patchwork(v.1.3.0), Seurat(v.5.1.0), SeuratObject(v.5.0.2), sp(v.2.1-4), ggplot2(v.3.5.1) dplyr(v.1.1.4)loaded via namespace (attached):\nfs(v.1.6.5), spatstat.sparse(v.3.1-0), httr(v.1.4.7), RColorBrewer(v.1.1-3), tools(v.4.4.1), sctransform(v.0.4.1), backports(v.1.5.0), alabaster.base(v.1.6.0), utf8(v.1.2.4), R6(v.2.5.1), HDF5Array(v.1.34.0), lazyeval(v.0.2.2), uwot(v.0.2.2), rhdf5filters(v.1.18.0), withr(v.3.0.2), gridExtra(v.2.3), downlit(v.0.4.4), progressr(v.0.15.0), cli(v.3.6.3), spatstat.explore(v.3.3-3), fastDummies(v.1.7.4), alabaster.se(v.1.6.0), labeling(v.0.4.3), sass(v.0.4.9), spatstat.data(v.3.1-2), ggridges(v.0.5.6), pbapply(v.1.7-2), parallelly(v.1.38.0), RSQLite(v.2.3.7), generics(v.0.1.3), ica(v.1.0-3), spatstat.random(v.3.3-2), Matrix(v.1.7-1), fansi(v.1.0.6), abind(v.1.4-8), lifecycle(v.1.0.4), yaml(v.2.3.10), rhdf5(v.2.50.0), SparseArray(v.1.6.0), BiocFileCache(v.2.14.0), Rtsne(v.0.17), grid(v.4.4.1), blob(v.1.2.4), promises(v.1.3.0), ExperimentHub(v.2.14.0), crayon(v.1.5.3), miniUI(v.0.1.1.1), lattice(v.0.22-6), beachmat(v.2.22.0), cowplot(v.1.1.3), KEGGREST(v.1.46.0), pillar(v.1.9.0), knitr(v.1.48), future.apply(v.1.11.3), codetools(v.0.2-20), leiden(v.0.4.3.1), glue(v.1.8.0), spatstat.univar(v.3.0-1), data.table(v.1.16.2), vctrs(v.0.6.5), png(v.0.1-8), gypsum(v.1.2.0), spam(v.2.11-0), gtable(v.0.3.6), cachem(v.1.1.0), xfun(v.0.49), S4Arrays(v.1.6.0), mime(v.0.12), tidygraph(v.1.3.1), survival(v.3.7-0), statmod(v.1.5.0), fitdistrplus(v.1.2-1), ROCR(v.1.0-11), nlme(v.3.1-166), bit64(v.4.5.2), alabaster.ranges(v.1.6.0), filelock(v.1.0.3), RcppAnnoy(v.0.0.22), bslib(v.0.8.0), irlba(v.2.3.5.1), KernSmooth(v.2.23-24), colorspace(v.2.1-1), DBI(v.1.2.3), tidyselect(v.1.2.1), bit(v.4.5.0), compiler(v.4.4.1), curl(v.5.2.3), httr2(v.1.0.5), BiocNeighbors(v.2.0.0), hdf5r(v.1.3.11), xml2(v.1.3.6), DelayedArray(v.0.32.0), plotly(v.4.10.4), bookdown(v.0.41), checkmate(v.2.3.2), scales(v.1.3.0), lmtest(v.0.9-40), rappdirs(v.0.3.3), stringr(v.1.5.1), digest(v.0.6.37), goftest(v.1.2-3), spatstat.utils(v.3.1-0), alabaster.matrix(v.1.6.0), rmarkdown(v.2.28), XVector(v.0.46.0), RhpcBLASctl(v.0.23-42), htmltools(v.0.5.8.1), pkgconfig(v.2.0.3), sparseMatrixStats(v.1.18.0), highr(v.0.11), dbplyr(v.2.5.0), fastmap(v.1.2.0), rlang(v.1.1.4), htmlwidgets(v.1.6.4), UCSC.utils(v.1.2.0), shiny(v.1.9.1), DelayedMatrixStats(v.1.28.0), farver(v.2.1.2), jquerylib(v.0.1.4), zoo(v.1.8-12), jsonlite(v.1.8.9), BiocParallel(v.1.40.0), BiocSingular(v.1.22.0), magrittr(v.2.0.3), GenomeInfoDbData(v.1.2.13), dotCall64(v.1.2), Rhdf5lib(v.1.28.0), munsell(v.0.5.1), viridis(v.0.6.5), reticulate(v.1.39.0), stringi(v.1.8.4), alabaster.schemas(v.1.6.0), zlibbioc(v.1.52.0), MASS(v.7.3-61), AnnotationHub(v.3.14.0), plyr(v.1.8.9), parallel(v.4.4.1), listenv(v.0.9.1), ggrepel(v.0.9.6), deldir(v.2.0-4), Biostrings(v.2.74.0), graphlayouts(v.1.2.0), splines(v.4.4.1), tensor(v.1.5), locfit(v.1.5-9.10), igraph(v.2.1.1), spatstat.geom(v.3.3-3), RcppHNSW(v.0.6.0), reshape2(v.1.4.4), ScaledMatrix(v.1.14.0), BiocVersion(v.3.20.0), evaluate(v.1.0.1), BiocManager(v.1.30.25), tweenr(v.2.0.3), httpuv(v.1.6.15), RANN(v.2.6.2), tidyr(v.1.3.1), purrr(v.1.0.2), polyclip(v.1.10-7), future(v.1.34.0), scattermore(v.1.2), ggforce(v.0.4.2), rsvd(v.1.0.5), xtable(v.1.8-4), RSpectra(v.0.16-2), later(v.1.3.2), viridisLite(v.0.4.2), tibble(v.3.2.1), memoise(v.2.0.1), AnnotationDbi(v.1.68.0), cluster(v.2.1.6) globals(v.0.16.3)","code":"\n\nlibrary(pander)\ndemo.Rmd_session <- sessionInfo()\npander(demo.Rmd_session)"}]
